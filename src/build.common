ACLOCAL_AMFLAGS = -I m4

# top_builddir dependencies are needed for fh2h.pl-generated headers
NEUT_INCLUDES = -I$(top_srcdir)/radcorr -I$(top_srcdir)/mec -I$(top_srcdir)/ht2p2h/inc \
			-I$(top_srcdir)/nuccorspl -I$(top_srcdir)/n1p1h/inc -I$(top_srcdir)/nuceff \
			-I$(top_srcdir)/nuclsmpl -I$(top_srcdir)/skmcsvc -I$(top_srcdir)/neutcore \
			-I$(top_srcdir)/partnuck -I$(top_srcdir)/specfunc  -I$(top_srcdir)/tools \
			-I$(top_builddir)/neutcore -I$(top_builddir)/skmcsvc -I$(top_builddir)/n1p1h \
			-I$(top_builddir)/nuccorspl -I$(top_builddir)/nuceff -I$(top_srcdir)/tauola \
			-I$(top_builddir)/tauola -I$(top_srcdir)/zbs -I$(top_srcdir)/zbsfns \
			-I$(top_srcdir)/t2kflux_zbs -I$(top_builddir)/t2kflux_zbs

NEUT_CLASS_INCLUDES = -I$(top_srcdir)/neutclass
NEUT_REWEIGHT_INCLUDES = -I$(top_srcdir)/reweight
NEUT_REWEIGHT_LIBS = $(top_builddir)/reweight/libNEUTReWeight.@NEUT_VERSION_NUM@.a

NEUT_STATIC_LIBS = $(top_builddir)/neutcore/libneutcore.@NEUT_VERSION_NUM@.a \
					$(top_builddir)/neutcore/libCERNOverride.@NEUT_VERSION_NUM@.a \
					$(top_builddir)/mec/libneutmec.@NEUT_VERSION_NUM@.a \
					$(top_builddir)/n1p1h/libn1p1h.@NEUT_VERSION_NUM@.a \
					$(top_builddir)/ht2p2h/libht2p2h.@NEUT_VERSION_NUM@.a \
					$(top_builddir)/nuccorspl/libnuccorspl.@NEUT_VERSION_NUM@.a \
					$(top_builddir)/nuceff/libnuceff.@NEUT_VERSION_NUM@.a \
					$(top_builddir)/radcorr/libradcorr.@NEUT_VERSION_NUM@.a \
					$(top_builddir)/specfunc/libspecfunc.@NEUT_VERSION_NUM@.a \
					$(top_builddir)/skmcsvc/libskmcsvc.@NEUT_VERSION_NUM@.a \
					$(top_builddir)/partnuck/libpartnuck.@NEUT_VERSION_NUM@.a \
					$(top_builddir)/tauola/libtauola.@NEUT_VERSION_NUM@.a \
					$(top_builddir)/zbs/libzbs.@NEUT_VERSION_NUM@.a \
					$(top_builddir)/zbsfns/libzbsfns.@NEUT_VERSION_NUM@.a \
					$(top_builddir)/t2kflux_zbs/libt2kflux_zbs.@NEUT_VERSION_NUM@.a

NEUT_LIBS = $(top_builddir)/neutclass/libNEUTClassUtils.@NEUT_VERSION_NUM@.a $(top_builddir)/neutclass/libNEUTClass.la $(top_builddir)/libNEUT.@NEUT_VERSION_NUM@.a 

CERN_ROOT = $(CERN)/$(CERN_LEVEL)

CERN_LINKFLAGS = -L$(CERN_ROOT)/lib
CERN_LIBS = -ljetset74 -lpdflib804 -lphotos202 -lmathlib -lpacklib -lkernlib

NEUT_DEFINES = -DgFortran

if NEUT_USE_GPERF
NEUT_DEFINES += -DNEUT_USE_GPERF
endif

if NEUT_HEPMC
NEUT_DEFINES += -DUSE_HEPMC
USE_HEPMC = yes
else
USE_HEPMC = no
endif

if IS_AARM64
NEUT_DEFINES += -DARCH_AARM64
endif

if NEUT_WRITE_NUCFSI
NEUT_DEFINES += -DNEUT_WRITE_NUCFSI -DNEUT_READ_NUCFSI
endif

NEUT_FFLAGS = -fno-backslash -fno-automatic -fno-second-underscore -ffixed-line-length-132 -fdollar-ok -fPIC -fbounds-check -Wall -Wextra -ffpe-trap=invalid,zero,overflow -DstrictF77 -Df2cFortran $(NEUT_DEFINES)

DEFAULT_FFLAGS = $(NEUT_FFLAGS) $(NEUT_INCLUDES) -I$(CERN_ROOT)/include

ROOT_CFLAGS=$(shell root-config --cflags)
DEFAULT_CXXFLAGS = -fPIC $(NEUT_DEFINES) $(NEUT_INCLUDES) -I$(CERN_ROOT)/include -std=c++11 $(ROOT_CFLAGS)

if NEUT_HEPMC
DEFAULT_CXXFLAGS += $(shell HepMC3-config --cflags) -I$(shell NuHepMC-config --incdir)
endif

DEFAULT_CFLAGS = -fPIC $(NEUT_DEFINES) $(NEUT_INCLUDES) -I$(CERN_ROOT)/include

if NEUT_DEBUG
DEFAULT_FFLAGS += -O0 -g
DEFAULT_CXXFLAGS += -O0 -g
DEFAULT_CFLAGS += -O0 -g
else
DEFAULT_FFLAGS += -O0
DEFAULT_CXXFLAGS += -O0
DEFAULT_CFLAGS += -O0
endif

DEFAULT_LINKFLAGS = -version-info @NEUT_VERSION_NUM@

if FC_ALLOW_ARG_MISMATCH
DEFAULT_FFLAGS += -fallow-argument-mismatch
DEFAULT_LINKFLAGS += -Wl,--allow-multiple-definition
endif

if FC_COMMON
DEFAULT_FFLAGS += -fcommon -Wl,--allow-multiple-definition
DEFAULT_CXXFLAGS += -Wl,--allow-multiple-definition
endif

ROOT_LINKFLAGS = $(shell root-config --ldflags) -pthread -rdynamic -L$(shell root-config --libdir)

ROOT_VERSION_COMPILE = $(shell root-config --version)
ROOT_ROOT_COMPILE = $(ROOTSYS)

if ROOT_MAJOR_IS_SIX
ROOT_LIBS = -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc
else
ROOT_LIBS = -lCore -lCint -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lm -ldl
endif

if NEUT_HEPMC
HEPMC_LIBDIR = $(shell HepMC3-config --libdir)
HEPMC_INCDIR = $(shell HepMC3-config --incdir)
NUHEPMC_LIBDIR = $(shell NuHepMC-config --libdir)
NUHEPMC_INCDIR = $(shell NuHepMC-config --incdir)
ROOT_LINKFLAGS += -L$(HEPMC_LIBDIR) -L$(NUHEPMC_LIBDIR)
NEUT_LIBS += -lNuHepMC -lHepMC3 -lHepMC3rootIO
else
endif

# I know... but this seems to work
EXE_LINKFLAGS = -fno-PIE -fno-pie
if FC_HAS_PIE
EXE_LINKFLAGS += -no-pie
endif
EXE_RTLIBS =  -lstdc++ -lgfortran
if NEUT_USE_GPERF
EXE_RTLIBS += -L@NEUT_GPERF@ -lprofiler
endif
