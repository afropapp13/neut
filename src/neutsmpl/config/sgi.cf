/* $Id: sgi.cf,v 1.1.1.1 2016/11/04 20:29:56 mdunkman Exp $
 *
 * $Log: sgi.cf,v $
 * Revision 1.1.1.1  2016/11/04 20:29:56  mdunkman
 * Import of NEUT 5.3.3 v1r27 for use with T2KReWeight v1r27 (Winter OA 2017)
 *
 * Revision 1.9  1998/08/25 19:37:06  messier
 * Added -extend_source to list of Fortran compile flags
 *
 * Revision 1.8  1998/08/25 18:56:07  messier
 * Removed gnu install command definition
 *
 * Revision 1.7  1998/08/25 18:30:04  messier
 * Updated the sgi definitions to include changes made in the latest CERN
 * distribution. To compile on 32-bit SGI's use imake_boot -DPre64. Modified
 * the bu.def file to sync. with these changes.
 *
 * Revision 1.6  1997/06/24 16:26:27  habig
 * Made compiling by debug the default. -ATH
 *
 * Revision 1.5  1997/06/19 22:00:01  habig
 * concat imake targets were adding an extra space.  In places where this
 * especially sucked, replaced whitespace with comment nulls. -ATH
 *
 * Revision 1.4  1997/06/19 17:20:10  habig
 * The compile targets in this file were missing the -o, and thus were
 * outputting no object files.  Bogus.  -ATH
 *
# Revision 1.3  1997/05/27  15:56:13  mcgrew
# Add patches to keep compadible with the K2K config files.
#
 * Revision 1.2  1997/04/27 05:06:07  mcgrew
 * partially adapted to SK
 *
 * Revision 1.1.1.1  1997/04/26 08:45:53  mcgrew
 * import config files
 *
 * Revision 1.1.1.1  1995/12/20  15:26:43  cernlib
 * X11R6 config files unmodified
 *
 *
 */
XCOMM platform:  $XConsortium: sgi.cf,v 1.43 94/06/03 21:38:45 matt Exp $

#define OSName			IRIX 6.3
XCOMM operating system:  OSName
#define OSMajorVersion		6
#define OSMinorVersion		3
#define OSTeenyVersion          0

#if OSMajorVersion < 4
/* We do not guarantee this will work */
#define BootstrapCFlags   -DX_WCHAR -DX_LOCALE -DX_USEBFUNCS -DSYSV
#define StandardDefines   -DX_WCHAR -DX_LOCALE -DX_USEBFUNCS -DSYSV
#endif

#define SystemV			YES
#define HasPutenv		YES
#define ExecableScripts		YES
#if OSMajorVersion > 3
#define SetTtyGroup		YES
#else
#define SetTtyGroup		NO
#endif
#define HasNdbm			YES
#define HasPoll                 YES
#define Malloc0ReturnsNull	YES
#define ExpandManNames          YES
#define BuildXInputExt		YES

#if OSMajorVersion > 3 || (OSMajorVersion == 3 && OSMinorVersion > 2)
#define NeedVarargsPrototypes	YES
#define NeedConstPrototypes	YES
#define NeedWidePrototypes	NO
#endif

#if OSMajorVersion > 4
#define HasWChar32              YES
#define XawI18nDefines		-DHAS_WCTYPE_H
#endif

/* Extra libraries provide : yp, sysV malloc, shared libc, and widechar */
/*#define ExtraLibraries -lsun -lmalloc -lc_s -lw */

/* #include <sgiLib.rules> */

#define SymbolTables -Wf,-XNp9000,-XNd8000,-XNh2000
#define PexSymbolTables -Wf,-XNp15000,-XNd15000,-XNh2000
#define ServerSymbolTables -Wf,-XNp8000,-XNh2000,-XNd8000

/* this is for floating point, ANSI cpp */
#define sgiCCOptions -xansi -D__STDC__=1 -float
#define DefaultCCOptions sgiCCOptions SymbolTables
#define PexCCOptions sgiCCOptions PexSymbolTables
#define ServerCCOptions sgiCCOptions ServerSymbolTables

/* For SGI C++ compiler, need to search extra dirs in make depend */
#ifndef CplusplusDependIncludes
#define CplusplusDependIncludes -I/usr/include/CC
#endif

/* At SGI, we don't need this */
/* at here we do...
 *#define ConstructMFLAGS		NO	/* build MFLAGS from MAKEFLAGS */

/* Used only for compressed fonts */
#define UNCOMPRESSPATH /usr/bsd/uncompress

/* Normally used only to conditionally chose the default font path order */
#define PrimaryScreenResolution 96

/* Override Imake.tmpl's "-X" flag */
#define LdCombineFlags -r

/* Installation Build Parameters */
#define InstKmemFlags -m 2755 -g sys

#define ArCmd ar scq

/* for xdm or anyone else to use */
#define DefaultUserPath :/usr/sbin:/usr/bsd:/usr/bin:/bin:$(BINDIR):/etc:/usr/etc
#define DefaultSystemPath /usr/sbin:/usr/bsd:/bin:/etc:/usr/bin:/usr/etc:$(BINDIR)

#define BuildServer             NO
#define ServerOSDefines -DDDXTIME
/* only need this for binary compatibility with their ddx */
#define ServerExtraDefines -DNEED_LINEHELPER

XCOMM Build the name of the object file that will be made as the
XCOMM target of a compile. This is used to place objects into a
XCOMM subdirectory. 
XCOMM redone here since the space in the definition itself was creeping
XCOMM into the results!  Lame!

#define ObjTargetName(target)/**/Concat($(OBJPREFIX),target)

#define ProgramTargetName(target)/**/Concat($(OBJPREFIX),target)

#define LibraryName(libname)/**/Concat(lib,libname.a)

/*   Experiment additions  */

#define XargsCmd		xargs

#undef DefaultCCOptions

#ifdef IsMips2
#define DefaultCCOptions        -mips2
#define DefaultFCOptions        -mips2 -align32 -extend_source
#define FortranCppCmd           f77 -P
#define OptimisedFortranFlags  -O -Olimit 2000
#define FortranSaveFlags       -static
#define ExperimentSystem       -DEXPERIMENT_SGI -DEXPERIMENT_UNIX
#define EXPERIMENT_SGI
#define EXPERIMENT_UNIX

#elif defined(Pre64)
#define DefaultCCOptions        /**/
#define DefaultFCOptions        -extend_source       
#define FortranCppCmd           f77 -P
#define OptimisedFortranFlags  -O -Olimit 2000
#define FortranSaveFlags       -static
#define ExperiementSystem      -DEXPERIMENT_SGI -DEXPERIMENT_UNIX
#define EXPERIMENT_SGI
#define EXPERIMENT_UNIX

#else

#define DefaultCCOptions        -n32 -mips4 -OPT:Olimit=0
#define DefaultFCOptions        -n32 -mips4 -OPT:Olimit=0 -extend_source
#define FortranCppCmd           f77 -P
#define OptimisedFortranFlags  -O
#define FortranSaveFlags       -static
#define ExperimentSystem       -DEXPERIMENT_QMIRIX64 -DEXPERIMENT_SGI -DEXPERIMENT_UNIX
#define EXPERIMENT_QMIRIX64
#define EXPERIMENT_SGI
#define EXPERIMENT_UNIX

#endif
#define CcAnsiMode              -xansi
#define CcStrictAnsiMode        -ansi


