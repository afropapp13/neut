/* $Id: linux.cf,v 1.1.1.1 2016/11/04 20:29:56 mdunkman Exp $
 *
 * $Log: linux.cf,v $
 * Revision 1.1.1.1  2016/11/04 20:29:56  mdunkman
 * Import of NEUT 5.3.3 v1r27 for use with T2KReWeight v1r27 (Winter OA 2017)
 *
 * Revision 1.50  2003/02/21 18:25:05  mcgrew
 * Add the -lthreads to ExtraLibraries in sun.cf, and update linux.cf so
 * it can handle threads as well.  Also fix a couple of minor bugs in
 * imake.cshrc and imake.profile that I've had in my directories for a
 * long time.  The new imake.[whatever] scripts correctly handle
 * fallback...
 *
 * Revision 1.49  2003/02/21 16:33:55  mcgrew
 * Update for new debian.
 *
 * Revision 1.48  2002/08/07 19:30:34  walter
 * Some of the SK software(e.g. apdetsim) assume that all fortran local
 * caraibles are initilized to zero like most FORTRAN compilers.  Add
 *
 * -finit-local-zero option.
 *
 * Revision 1.47  2001/01/26 13:03:22  sharkey
 * Return "egcc" to "gcc" for Debian versions >= 2.3.
 *
 * Revision 1.46  2000/09/14 22:26:16  sharkey
 * Move the StandardDefines crap out of the Fortran dependent section, but
 * leave a new FortranStandardDefines definition in its place that just has
 * the Fortran stuff in it.
 *
 * Add a VendorStandardDefines which will include -DDEBIAN=<version code number>
 * for Debian or -DREDHAT, -DSLACKWARE, etc., etc.
 *
 * Build StandardDefines out of the common linux definitions appended with
 * FortranStandardDefines and VendorStandardDefines.
 *
 * Revision 1.45  1999/11/12 18:25:41  tomba
 * Not every Red Hat Linux has g2c library.
 *
 * Revision 1.44  1999/10/11 18:45:14  mcgrew
 * Make "StrictF77" into a standard flag with a default value in defaults.tmpl
 *
 * Revision 1.43  1999/10/11 18:28:30  bviren
 * Use stdarg instead of vararg, on Debian
 *
 * Revision 1.42  1999/07/26 21:55:10  bviren
 * From Debian 2.0 on egcs and libg2c should exist (at least acording to
 * the current state of ale(2.0), bock(2.1) and brick(2.3) at sunysb.
 * This is a little bit of a fudge since people can and do upgrade
 * compilers and libs w/out upgrading the base-files package (where
 * /etc/debian_version would be updated).  However, for most likely
 * versions of Debian out there today, it should hold true.
 *
 * Revision 1.41  1999/07/26 20:16:43  bviren
 * In order to avoid compiling modules or files which require pointer,
 * structure or other extensions to F77 one should define StrictF77 in
 * the appropriate os.cf file.  This has been done for G77 and F2C on
 * linux.
 *
 * Revision 1.40  1999/07/24 21:45:20  bviren
 * Pass ``-DStrictF77'' on the compile cmdline for non fancy fortrans
 * (g77 and f2c).
 *
 * Revision 1.39  1999/07/22 18:23:59  mcgrew
 * Major cleanup of the linux definitions.  Much of the stuff that was in
 * site.def, but belonged in linux.cf has been moved there.  I've also
 * added the Linux distributions as vendors so that Linux looks a lot
 * more like the unixen.
 *
 * Revision 1.38  1999/06/23 11:20:50  superk
 * Modified Files: linux.cf
 * Added Files: site_definitions/linuxppc.def
 *
 * Changes/additions for LinuxPPC  -dt
 *
 * Revision 1.37  1999/03/25 05:28:11  mcgrew
 * Add options to the g77 compile to match cernlib.
 *
 * Revision 1.36  1999/03/23 08:18:30  sharkey
 * Define the C compiler to be "egcc" rather than "gcc" if UseEgcs is defined
 * in the site.def.  Define UseEgcs in the kek.def and linux-fortran.def if
 * a DEBIAN is defined.
 *
 * There is still one hardcoded reference to gcc in other.rules that I don't
 * know how to get rid of.  Hopefully it's harmless.
 *
 * Revision 1.35  1999/03/23 07:24:03  mcgrew
 * Add -Wsurprising to the g77 command since g77 has taken some, well
 * surprising attitudes to fortran code.
 *
 * Revision 1.34  1999/03/17 05:17:21  sharkey
 * imake_boot can now detect Debian Linux systems by checking for the existence
 * of /var/lib/dpkg.  Debian differentiates between f2c (g77) and g2c (egcs g77)
 * libraries, and we want to link in both, if they exist.
 *
 * imake_boot will pass -DDEBIAN if it finds /var/lib/dpkg and kek.def and
 * linux-fortran.def now define HasG2C if it sees DEBIAN defined, and linux.cf
 * will append -lg2c if it sees HasG2C.  This should make all systems
 * happy.  Except maybe those Red Hatters out there...
 *
 * Revision 1.33  1999/03/09 05:44:12  mcgrew
 * As far as cfortran is concerned, pgf77 is a f2c compiler.
 *
 * Revision 1.32  1999/02/26 08:39:32  sharkey
 * Removed some Linux specific over-rides of default settings that Clark
 * and I both considered harmful.
 *
 * Code will now compile with optimizations on by default.
 *
 * Revision 1.31  1999/02/16 05:17:28  mcgrew
 * This seems to make both C and pgftn77 happy.
 *
 * Revision 1.30  1999/02/04 06:57:52  mcgrew
 * Change the definition values to prevent recursive defines and print a
 * message when compiling one kilo-ton code.
 *
 * Revision 1.29  1999/01/29 01:37:56  mcgrew
 * THIS ONLY AFFECTS PGF77.  EVERYBODYELSE, STOP PAYING ATTENTION.
 *
 * To use F77 code compiled with PGF77 with a normal C main, we need to
 * provide a getopt.o file.  This was done using NormalProgramTarget, but
 * it makes it tricky to compile normal C code.  It has been changed to
 * use LDPOSTLIB.  If you need to compile C code without a getopt.o
 * available then LDPOSTLIB can be unset
 *
 * Revision 1.28  1998/11/17 00:36:35  tomba
 * Added option -B111 to Absoft f77 compiler.
 * It helps find nasty, hard to find bugs when floating point operation
 * sometimes gives wrong result.
 * It can be caused by a function being called as subroutine
 * some time eariler. In such cases FPU stack can be messed up.
 *
 * Revision 1.27  1998/11/16 06:21:29  sharkey
 * I've moved the StandardDefines and StandardCppDefines macro definitions
 * into the Fortran compiler dependent section to set compiler
 * dependent defines. 
 *
 * -Df2cFortran is now set for g77 pgf77 and fort77
 * -DAbsoftUNIXFortan is set for Absoft
 *
 * These defines are required for CERN's cfortran.h interfacing header to work
 * properly.
 *
 * pgf77 isn't included as an option in cfortran.h, so I have not added any new
 * defines for that compiler.  It will need something if cfortran.h is to be
 * included, but I don't know what.
 *
 * Revision 1.26  1998/11/15 16:14:32  sharkey
 * Wojciech raised some legitimate concerns about the no-globals options I
 * installed a few days ago.  Unfortunately, there's no easy solution to this
 * problem that I can think of.
 *
 * This version is a compromise, of sorts.  It still has the -fno-globals flag
 * which allows g77 to compile buggy code, but I've removed the -Wno-globals
 * flag, so that if you try to compile code like this, you'll get error messages
 * out the wazoo.  This should aid debugging new code, but still allow you to
 * compile the brain damaged bits, although somewhat painfully.
 *
 * Revision 1.25  1998/11/14 18:15:01  tomba
 * Added option -B19 for Absoft f77 to alert compiler of a possibility
 * of pointer aliases.
 *
 * Revision 1.24  1998/11/12 07:59:04  sharkey
 * Newer versions of g77 are unable to compile some buggy CERNLIB code
 * without the flag "-fno-globals".  (And "-Wno-globals" to compile without
 * errors.)
 *
 * This flag disables "diagnostics about inter-procedural analysis problems, such
 * as disagreements about the type of a function or a procedure's argument, that
 * might cause a compiler crash when attempting to inline a reference to a
 * procedure within a program unit."  (from the g77 info page)
 *
 * It continues: "this option might be quite useful when compiling existing,
 * `working' code that happens to have a few bugs that do not generally show
 * themselves, but `g77' exposes via a diagnostic.  Use of this option therefore
 * has the effect of instructing `g77' to behave more like it did up through
 * version 0.5.19.1, when it paid little or no attention to disagreements between
 * program units about a procedure's type and argument information, and when it
 * performed no inlining of procedures (except statement functions)."
 *
 * This option could make debugging new code more difficult, but it makes using
 * certain parts of CERNLIB possible.  The latter seems more valuable than
 * the former.  I've added both the -f and -W flags as defaults.
 *
 * This only effects g77.
 *
 * Revision 1.23  1998/11/11 23:28:34  tomba
 * Added -Dabsoft for conditional compilations.
 *
 * Revision 1.22  1998/07/16 15:34:15  bviren
 * add libcrypt to libs for libc6 sys
 *
 * Revision 1.21  1998/06/29 23:37:01  tomba
 * Added option to align COMMON block variables with Absoft f77.
 * This did not cause problems (yet), but seems like the right thing to do
 * in order to avoid future problems with interfacing C and Fortran.
 *
 * Revision 1.20  1998/04/27 04:58:19  habig
 * Added flag to Absoft defs to allow accessing of block data's in .a files.
 * See the nuance Imakefile for an example of how to link.  You have to
 * add a -u "blockname_" to the link flags to force the linker to load the
 * block datas your program will need.
 *
 * Revision 1.19  1998/04/20 22:28:18  skrep
 * Allow very many extension lines.
 *
 * Revision 1.18  1998/04/02 22:17:08  skrep
 * Add fixs to work with f2c.
 *
 * Revision 1.17  1998/03/11 01:39:20  sharkey
 * Modified linux.cf to allow longer lines in fortran with g77.
 *
 * Revision 1.16  1998/03/03 22:59:58  skrep
 * Differentiate between libc5 and libc6 compiles.
 *
 * Revision 1.15  1998/01/12 15:12:25  skrep
 * Include libdb.a in the extra libraries.  DBM seems to be part of the
 * libc on most machines, so make it appear automagically on linux.
 *
 * Revision 1.14  1998/01/07 14:37:20  mcgrew
 * Linux uses libdb.a for libdbm.a... Go figure, is the extra "m" really
 * that expensive?
 *
 * Revision 1.13  1998/01/05 21:31:35  habig
 * Updated f77 flags for the new Absoft which works with usmc.
 *
 * Revision 1.12  1997/11/10 09:45:38  sharkey
 * Added FortranLibraries definition for g77 under linux.
 *
 * Revision 1.11  1997/08/06 19:08:32  bviren
 * Add defining of ``pgf77'' in C code as well as Fortran code.
 *
 * Revision 1.10  1997/08/06 15:51:38  bviren
 * Redefine "NormalProgramTarget" in order to link in dummy getarg_() and
 * iargc_() call to avoid the undefined references that CERNLIB causes
 * when linking in pgf77 libs to a C-main. If CERNLIB ever gets fixed,
 * this redef can be removed.  The overiding getarg/iargc functions are
 * in src/ska/getarg.c. These too, can be removed if CERNLIB is fixed (or
 * if a better, less kludged, work around is found).
 *
 * Revision 1.9  1997/07/31 21:47:30  bviren
 * Add The Portland Group's pgf77 compiler. With pgf77 compiled CERNLIB
 * the SuperK libs and USMC can be successfully compiled (and ran).
 *
 * Revision 1.8  1997/06/16 18:34:54  bviren
 * Fix man pages to have Nsk as extension.
 *
 * Revision 1.7  1997/06/11 19:33:10  bviren
 * Add setup for using Absoft Fortran. To use, just define ``HasFortran''
 * to ``YES'' and define ``UseAbsoft'' in your site.def in the before
 * vendor section, or alternatively, in linux.p-cf.
 *
 * Revision 1.6  1997/06/10 23:45:24  skrep
 * Various minor fixes so that files are a bit more pleasing.
 *
 * Revision 1.5  1997/06/10 18:04:32  mcgrew
 * Many changes so that these config files work in a
 * multiple-architecture environment.
 *
# Revision 1.4  1997/05/27  15:55:48  mcgrew
# Add patches to keep compadible with the K2K config files.
#
 * Revision 1.3  1997/05/04 05:22:39  mcgrew
 * Added some more private overide files and fixed for linux.
 *
 * Revision 1.2  1997/04/27 05:05:59  mcgrew
 * partially adapted to SK
 *
 * Revision 1.1.1.1  1997/04/26 08:45:51  mcgrew
 * import config files
 *
 * Revision 1.1.1.1  1995/12/20 15:26:45  cernlib
 * X11R6 config files unmodified
 *
 *
 */
XCOMM platform:  $XConsortium: linux.cf,v 1.11 95/01/23 18:32:03 kaleb Exp $
XCOMM $Id: linux.cf,v 1.1.1.1 2016/11/04 20:29:56 mdunkman Exp $

#ifndef OSName
#  define OSName			Linux
#endif
#ifndef OSVendor
#  ifdef DebianGnuLinuxArchitecture
#    define OSVendor		       Debian
#  endif
#  ifdef SlackWareLinuxArchitecture
#    define OSVendor                   SlackWare
#  endif
#  ifdef RedhatLinuxArchitecture
#    define OSVendor                   RedHat
#  endif
#  ifdef CalderaLinuxArchitecture
#    define OSVendor                   Caldera
#  endif
#  ifdef SuSeLinuxArchitecture
#    define OSVendor                   SuSe
#  endif
#  ifdef MandrakeLinuxArchitecture
#    define OSVendor                   Mandrake
#  endif
#endif

#undef unix			/* GF. this is not needed anywhere */

/* Deal with the vendor differences. */
#ifdef DebianGnuLinuxArchitecture
#  if !defined(OSMajorVersion) && DebianGnuLinuxArchitecture >= 200
#    define OSMajorVersion		2
#  else
#    define OSMajorVersion              1
#  endif
#  if !defined(OSMinorVersion) && DebianGnuLinuxArchitecture >= 240
#    define VendorStandardDefines	-DDEBIAN=240
#    define OSMinorVersion		4
#  elif !defined(OSMinorVersion) && DebianGnuLinuxArchitecture == 230
#    define VendorStandardDefines	-DDEBIAN=230
#    define OSMinorVersion		3
#  elif !defined(OSMinorVersion) && DebianGnuLinuxArchitecture == 220
#    define VendorStandardDefines	-DDEBIAN=220
#    define OSMinorVersion		2
#  elif !defined(OSMinorVersion) && DebianGnuLinuxArchitecture == 210
#    define VendorStandardDefines	-DDEBIAN=210
#    define OSMinorVersion		1
#  else
#    define VendorStandardDefines	-DDEBIAN=200
#    define OSMinorVersion 0
#  endif
#  if OSMajorVersion == 1 && OSMinorVersion > 1
#    define HasG2C   YES
#    define UseEgcs  YES
#  endif
/* Don't know about the above one, but bo, hamm, slink and potato */
/* probably need this */
#  if OSMajorVersion == 2 
#    define HasG2C   YES
#    if OSMinorVersion < 3
#      define UseEgcs  YES
#    endif
#    define DefaultCCOptions -DUSE_STDARG
#  endif
#endif /* DebianGnuLinuxArchitecture */

#ifdef SlackwareLinuxArchitecture
#  define VendorStandardDefines	-DSLACKWARE
#endif

#ifdef RedhatLinuxArchitecture
#  define VendorStandardDefines	-DREDHAT
#  ifndef HasNoG2C
#    define HasG2C     YES
#  endif
#endif

#ifdef CalderaLinuxArchitecture
#  define VendorStandardDefines	-DCALDERA
#endif

#ifdef SuSeLinuxArchitecture
#  define VendorStandardDefines	-DSUSE
#endif

#ifdef MandrakeLinuxArchitecture
#  define VendorStandardDefines	-DMANDRAKE
#endif

#ifndef OSMajorVersion
#  define OSMajorVersion		1
#endif
#ifndef OSMinorVersion
#  define OSMinorVersion		0
#endif
#ifndef OSTeenyVersion
#  define OSTeenyVersion		0
#endif

#ifndef UseElfFormat
#  define UseElfFormat		YES
#endif

#ifndef AOutIsDefault
#  define AOutIsDefault		NO
#endif

#ifndef HasGcc
#  define HasGcc			YES
#endif

#ifndef HasGcc2
#  define HasGcc2			YES
#endif

#ifndef HasGcc2ForCplusplus
#  define HasGcc2ForCplusplus	YES
#endif

#ifndef GccUsesGas
#  define GccUsesGas		YES
#endif

#ifndef UseGas
#  define UseGas			YES
#endif

#ifndef GnuCpp
#  define GnuCpp			YES
#endif

#ifndef HasShadowPasswd
#  define HasShadowPasswd		NO
#endif

#ifndef HasLibCrypt
# define HasLibCrypt		NO
#endif

#ifndef HasPutenv
#  define HasPutenv		YES
#endif

#ifndef HasShm
#  define HasShm			YES
#endif

#ifndef HasSockets
#  define HasSockets		YES
#endif

#ifndef AvoidNullMakeCommand
#  define AvoidNullMakeCommand	YES
#endif

#ifndef StripInstalledPrograms
#  define StripInstalledPrograms	YES
#endif

#ifndef Malloc0ReturnsNull
#  define Malloc0ReturnsNull	YES
#endif

#ifndef NeedConstPrototypes
#  define NeedConstPrototypes	YES
#endif

#ifndef NeedFunctionPrototypes
#  define NeedFunctionPrototypes	YES
#endif

#ifndef NeedNestedPrototypes
#  define NeedNestedPrototypes	YES
#endif

#ifndef NeedVarargsPrototypes
#  define NeedVarargsPrototypes	YES
#endif

#ifndef NeedWidePrototypes
#  define NeedWidePrototypes	NO
#endif

/* The linux make is GNUMake */
#ifndef MakeCmd
#  define MakeCmd make
#endif

/* Extra Libraries needed on Linux */
#ifndef ExtraLibraries	  
#if defined(LinuxCLibMajorVersion) && (LinuxCLibMajorVersion > 5)
#  define ExtraLibraries -ldb -lcrypt   /* Default to libc6 */
#else
#  define ExtraLibraries  /* No Extra Libraries */
#endif
#endif

XCOMM Define the linux threads libraries.
#ifndef ThreadsLibraries
#  define ThreadsLibraries -lpthread
#endif

#if UseElfFormat && AOutIsDefault
#ifndef CcCmd
#ifdef UseEgcs
#  define CcCmd			egcc -b i486-linuxelf
#else
#  define CcCmd			gcc -b i486-linuxelf
#endif
#endif
#ifndef AsCmd
#  define AsCmd			/usr/i486-linuxelf/bin/as
#endif
#ifndef LdCmd
#  define LdCmd			ld -m elf_i386
#endif
#ifndef AsmDefines
#  define AsmDefines		-D__ELF__
#endif
#ifndef CplusplusCmd
#  define CplusplusCmd		g++ -b i486-linuxelf
#endif
#endif /* UseElfFormat && AOutIsDefault */

#ifndef CppCmd
#  define CppCmd			/lib/cpp
#endif

#ifndef YaccCmd
#  define YaccCmd			bison -y
#endif

#ifndef YaccLib
#  define YaccLib			/**/
#endif

#ifndef LexCmd
#  define LexCmd			flex -l
#endif

#ifndef LexLib
#  define LexLib			-lfl
#endif

#ifndef DBMLibrary
#  define DBMLibrary			-ldb
#endif

#ifndef PreProcessCmd
#  define PreProcessCmd		CcCmd -E
#endif

#ifndef PostIncDir
#  define PostIncDir		`CcCmd --print-libgcc-file-name | sed 's/libgcc.a/include/'`
#endif

#ifndef LdCombineFlags
#  define LdCombineFlags		-r
#endif

#ifndef OptimizedCDebugFlags
#  ifdef PowerPCArchitecture
#    define OptimizedCDebugFlags	-O2 -fno-strength-reduce -fomit-frame-pointer
#  else
#    define OptimizedCDebugFlags	-O2 -fno-strength-reduce \
				-fomit-frame-pointer
#  endif
#endif

#ifndef InstUidFlags
#  define InstUidFlags		-s -m 4755
#endif

/* Some of these man page defaults are overriden in the above OS sections */
#ifndef ManSuffix
#  define ManSuffix	1sk
#endif

#ifndef ManDir
#  define ManDir		$(MANSOURCEPATH)1
#endif

#ifndef LibManSuffix
#  define LibManSuffix	3sk
#endif

#ifndef LibmanDir
#  define LibmanDir	$(MANSOURCEPATH)3
#endif

#ifndef FileManSuffix
#  define FileManSuffix	5sk
#endif

#ifndef FileManDir
#  define FileManDir	$(MANSOURCEPATH)5
#endif

#include <lnxLib.rules>

/*
	The FORTRAN definition section. 
	Define:
		HasFortran	YES
	And one of:
		UseG77
		UseFort77
		UseAbsoft
		UsePGroup
	in site.def. See site_definitions/linux-fortran.def for example
*/
#if HasFortran
#if defined (UseG77)		/* GNU F77 */
#  ifndef f2cFortran
#    define f2cFortran	        YES
#  endif
#  define StrictF77             YES
#  ifndef FortranStandardDefines 
#    define FortranStandardDefines	-Df2cFortran -DStrictF77
#  endif
#  ifndef FortranCmd
#    define FortranCmd		g77
#  endif
#  ifndef FortranSaveFlags
#    define FortranSaveFlags	/* */ /* Everything static !? */
#  endif
#  ifndef DefaultFCOptions
#    ifdef PowerPCArchitecture
#      define DefaultFCOptions -fPIC -fno-backslash -fno-automatic \
       -fno-second-underscore -fugly-complex -ffixed-line-length-132 \
       -fno-globals -fdollar-ok -fugly-logint
#    else
#      define DefaultFCOptions -fPIC -fno-backslash -fno-automatic -finit-local-zero\
       -fno-second-underscore -fugly-complex -ffixed-line-length-132 \
       -fno-globals -fdollar-ok  -ffortran-bounds-check
#    endif
#  endif
#  ifndef FortranLibraries
#    ifdef HasG2C
#      define FortranLibraries	-lg2c -lm 
#    else
#      define FortranLibraries	-lf2c -lm 
#    endif
#  endif
#  ifndef FortranHasStructures
#    define FortranHasStructures NO
#  endif
#elif defined (UseGFortran) /* gfortran */
#  ifndef f2cFortran
#    define f2cFortran	        YES
#  endif
#  define StrictF77             YES
#  ifndef FortranStandardDefines 
#    define FortranStandardDefines	-Df2cFortran -DStrictF77 -DgFortran
#  endif
#  ifndef FortranCmd
#    define FortranCmd		gfortran
#  endif
#  ifndef FortranSaveFlags
#    define FortranSaveFlags	/* */ /* Everything static !? */
#  endif
#  ifndef DefaultFCOptions
#    ifdef PowerPCArchitecture
#      define DefaultFCOptions-fPIC -fno-backslash -fno-automatic \
       -fno-second-underscore -ffixed-line-length-132 \
       -fno-globals -fdollar-ok -fugly-logint
#    else
#      define DefaultFCOptions -fPIC -fno-backslash -fno-automatic \
       -fno-second-underscore -ffixed-line-length-132 \
       -fdollar-ok  -frange-check -fbounds-check -Wall -W \
       -ffpe-trap=invalid,overflow,zero
#    endif
#  endif
#  ifndef FortranLibraries
#    ifdef HasG2C
#      define FortranLibraries	-lgfortran -lm -lgmp
#    else
#      define FortranLibraries	-lf2c -lm 
#    endif
#  endif
#  ifndef FortranHasStructures
#    define FortranHasStructures NO
#  endif
#elif defined (UseFort77)	/* Fort77 interface to f2c */
#  ifndef f2cFortran
#    define f2cFortran	        YES
#  endif
#  define StrictF77             YES
#  ifndef FortranStandardDefines 
#    define FortranStandardDefines	-Df2cFortran -DStrictF77
#  endif
#  ifndef FortranCmd
#    define FortranCmd		fort77
#  endif
#  ifndef FortranSaveFlags
#    define FortranSaveFlags	/* */ /* Everything static !? */
#  endif
#  ifndef DefaultFCOptions
#    define DefaultFCOptions	-NC792 -E -g -Wf,-A,-f
#  endif
#  ifndef FortranLibraries
#    ifdef HasG2C
#      define FortranLibraries	-lf2c -lg2c -lm 
#    else
#      define FortranLibraries	-lf2c -lm 
#    endif
#  endif
#  ifndef ExtraLoadFlags
#    define ExtraLoadFlags	-Wl,-defsym,MAIN__=main
#  endif
#  ifndef FortranHasStructures
#    define FortranHasStructures NO
#  endif
#elif defined (UseAbsoft)	/* Absoft F77 */
#  ifndef FortranDoesCpp
#    define FortranDoesCpp	YES
#  endif
#  ifndef FortranStandardDefines 
#    define FortranStandardDefines	 -DAbsoftUNIXFortran
#  endif
#  ifndef FortranCmd
#    define FortranCmd		f77
#  endif
#  ifndef DefaultFCOptions
#    define DefaultFCOptions	-f -N110 -N109 -N116 -W -N90 -N22 -N34 -B108 -s -B19 -B111 -Dabsoft
#  endif
#  ifndef FortranCannotRedirectObject
#    define FortranCannotRedirectObject
#  endif
#  ifndef FortranLibraries
#    ifdef HasG2C
#      define FortranLibraries	-lU77 -lV77 -lfio -lf77math -lf2c -lg2c -lm 
#    else
#      define FortranLibraries	-lU77 -lV77 -lfio -lf77math -lf2c -lm 
#    endif
#  endif
#  ifndef ExtraLoadFlags
#    define ExtraLoadFlags	-Wl,-defsym,MAIN__=main
#  endif

/* redef FortranProgramTarget as NormalProgramTarget for Absoft f77.  It works,
   and is easier than trying to make two seperate cases of link flags. 
*/
#define	FortranProgramTarget(program,objlist,deplibs,locallibs,syslibs)	@@\
.PHONY: program								@@\
									@@\
program: ProgramTargetName(program)					@@\
									@@\
ProgramTargetName(program): Objects(objlist) deplibs			@@\
	RemoveTargetProgram($@)						@@\
	LinkRule($@,$(LDOPTIONS),objlist,locallibs $(LDLIBS) syslibs)	@@\
									@@\
SentinelProgramTarget(program,objlist deplibs,objlist locallibs $(LDLIBS) syslibs) @@\
PurifyProgramTarget(program,objlist deplibs,objlist locallibs $(LDLIBS) syslibs) @@\
ProofProgramTarget(program,objlist deplibs,objlist locallibs $(LDLIBS) syslibs) @@\
									@@\
clean::									@@\
	RemoveFile(ProgramTargetName(program))

#elif defined (UsePGroup)	/* Portland Group F77 */
#  ifndef FortranDoesCpp
#    define FortranDoesCpp	YES
#  endif
#  ifndef FortranStandardDefines 
#    define FortranStandardDefines	-Df2cFortran
#  endif
#  ifndef FortranCmd
#    define FortranCmd		pgf77
#  endif
#  ifdef DefaultCCOptions
#    undef DefaultCCOptions
#  endif
#  define DefaultCCOptions	-Dpgf77 -ansi -DNO_ASM
#  ifndef DefaultFCOptions
#    define DefaultFCOptions	-Dpgf77 -Mextend -Munixlogical -Mdefaultunit -Msave -Mcray=pointer 
#  endif
#  ifdef FortranCannotRedirectObject
#    undef FortranCannotRedirectObject
#  endif
#  ifndef FortranLibraries
#    define FortranLibraries	-L/usr/local/pgi/linux86/lib -lpgftnrtl -lpgc -lm
#  endif
#  ifndef ExtraLoadFlags
#    ifdef USE_F2C_CERNLIB
#      define ExtraLoadFlags	-L/usr/local/lib -lpgf2c
#    endif
#  endif

#  ifndef pgf77_linkage
#    define pgf77_linkage -Wl,-defsym,getarg_=0,-defsym,iargc_=0,-defsym,__argc_save=0,-defsym,__argv_save=0
#  endif

#  define REDEFINE_NORMALPROGRAMTARGET YES
#  ifndef REDEFINE_NORMALPROGRAMTARGET
/* Set a LdPostLib flag to load the local version of GETOPT */
XCOMM #############################################################
XCOMM LDPOSTLIB has been set to $(LIBDIR)/getopt.o to work around a
XCOMM pgf77 bug.  Do compile pure C programs when ska is not installed
XCOMM add "LDPOSTLIB=" to your Makefile
XCOMM #############################################################
#    define LdPostLib -Wl,-defsym,getarg_=0,-defsym,iargc_=0,-defsym,__argc_save=0,-defsym,__argv_save=0
#  else 
XCOMM	For a C-main, use dummy getarg_/iargc_ so as not to link in pgf77's
XCOMM	getarg_/iargc_. Doing so would leave some symbols which are define
XCOMM	in pgfmain.o to go undefined. If this gets fixed, this over-
XCOMM	ridden NormalProgramTarget.  The can also be fixed by setting
XCOMM   LdPostLib 
#define	NormalProgramTarget(program,objlist,deplibs,locallibs,syslibs)	@@\
.PHONY: program								@@\
									@@\
program: ProgramTargetName(program)					@@\
									@@\
ProgramTargetName(program): Objects(objlist) deplibs			@@\
	RemoveTargetProgram($@)						@@\
	LinkRule($@,$(LDOPTIONS) pgf77_linkage,objlist,locallibs $(LDLIBS) syslibs)	@@\
									@@\
SentinelProgramTarget(program,objlist deplibs,objlist locallibs $(LDLIBS) syslibs) @@\
PurifyProgramTarget(program,objlist deplibs,objlist locallibs $(LDLIBS) syslibs) @@\
ProofProgramTarget(program,objlist deplibs,objlist locallibs $(LDLIBS) syslibs) @@\
									@@\
clean::									@@\
	RemoveFile(ProgramTargetName(program))
#  endif

#else				/* No F77 defined*/
#  undef HasFortran
#endif /* Type of F77 */
#endif /* HasFortran */

#ifndef StandardDefines 
#  ifdef PowerPCArchitecture
#    define StandardDefines -Dlinux -D__powerpc__ -D_POSIX_SOURCE -D_BSD_SOURCE -D_GNU_SOURCE -DX_LOCALE FortranStandardDefines	VendorStandardDefines
#  else
#    define StandardDefines -Dlinux -D__i386__ -D_POSIX_SOURCE -D_BSD_SOURCE -D_GNU_SOURCE -DX_LOCALE FortranStandardDefines VendorStandardDefines
#  endif
#endif

#ifndef StandardCppDefines
#  define StandardCppDefines	StandardDefines
#endif

#ifndef ExperimentSystem
#  define ExperimentSystem	-DEXPERIMENT_LINUX -DEXPERIMENT_UNIX -DEXPERIMENT_LNX
#endif
#ifndef EXPERIMENT
#  define EXPERIMENT_LINUX	YES
#endif
#ifndef EXPERIMENT
#  define EXPERIMENT_UNIX		YES
#endif
#ifndef EXPERIMENT
#  define EXPERIMENT_LNX		YES
#endif

#ifndef EXPERIMENT
#  define EXPERIMENT_SHIFT	NO
#endif

#ifndef X11Includes
#  define X11Includes		-I/usr/X11R6/include
#endif

/* End  EXPERIMENT changes */

