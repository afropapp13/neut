************************************************************************
*     ------------------------
      FUNCTION dump_crs_for_osc(IPAR,E)
*     ------------------------
*
*     (Purpose)
*       Calc. TOTAL CROSS SECTION OF NEUTRINO
*
*     (Input)
*       IPAR   : NEUTRINO TYPE
*                  12 : NEU-E
*                 -12 : NEU-E-BAR            
*                  14 : NEU-MU
*                 -14 : NEU-MU-BAR            
*                  16 : NEU-TAU
*                 -16 : NEU-TAU-BAR
*       E      : NEUTRINO ENERGY ( GEV )
*     
*     (Output)
*       FNTOTPAU : CROSS SECTION ( 10^-38cm^2 )
*
*     (Creation Date and Author)
*       1983.11.23 ; M.Nakahata
*       1985.01.11 ; M.Nakahata FERMI MOTION AND PAULI PRINCIPLE
*       1987.08.13 ; N.Sato     NEU_TAU
*       1988.10.08 ; T.Kajita   N.C. ELASTIC INT
*       1995.05.10 ; K. KANEYUKI  FOR S.K.
*                    TOTPAU -> FNTOTPAU
*       1996.05.26 ; Y.Hayato   ADD COHERENT PION PRODUCTION      
*       1997.12.10 ; J.Kameda   ADD single eta production 
*       1997.12.10 ; J.Kameda   ADD single  K  production
*       2007.08.23 ; G.Mitsuka  add delta->gamma decay
*       2007.11.05 ; G.Mitsuka  support target nucleus besides 16O
*       2007.11.06 ; G.Mitsuka  change fnelspau to fnelspau_select
*       2007.11.10 ; T.Tanaka   add upmu mode
*     
************************************************************************
C
C    MEANING OF DATA
C    RATN   : NEUTRON RATIO IN TARGET
C    RATP   : PROTON RATIO IN TARGET
C    RATFRE : FREE PROTON RATIO IN TARGET
C     
      implicit none

#include "necard.h"
 
      real*4    dump_crs_for_osc

      INTEGER*4 IPAR
      REAL*4    E,ETMP
      REAL*4    XCCQE,XCC1PI,XCCCOH,XCCMPI,XNCALL

      REAL*4    APICRSCC,APICRSNC,R1320CC,R1320NC
      REAL*4    RATN,RATP,RATFRE

      REAL*4    FNELSPAU_SELECT,FNELSCRS,FNELSCRN,FNELSPAN
      REAL*4    RSSPICRS,RSSETCRS,RSSKCRS,RSSGCRS,COHCRSNE
      REAL*4    FNAPICRS

      REAL MOLECULE

      REAL*4    TOTCRS,OSCCRS,OSCPROB

      REAL*4    factor
      REAL*4    DM2
      PARAMETER (DM2=2.4e-3)

#ifdef UPMU_RCK
      DATA RATN/0.5/
      DATA RATP/0.5/
      DATA RATFRE/0./
      MOLECULE=18.0
#else
C     NUMBNDN, NUMBNDN etc. are set in necard (2007 Nov G.Mitsuka)
      RATN  =float(NUMBNDN)/float(NUMBNDN+NUMBNDP+NUMFREP)
      RATP  =float(NUMBNDP+NUMFREP)/float(NUMBNDN+NUMBNDP+NUMFREP)
      RATFRE=float(NUMFREP)/float(NUMBNDN+NUMBNDP+NUMFREP)
      MOLECULE=float(NUMBNDN+NUMBNDP+NUMFREP)
#endif

C     --ENERGY UPPER LIMIT FOR 1PI
      IF(E.LE.1000.) THEN
         ETMP=E
      ELSE
         ETMP=999.999
      ENDIF

C     
      XCCQE  = 0.
      XCC1PI = 0.
      XCCCOH = 0.
      XCCMPI = 0.
      XNCALL = 0.

      IF (IPAR.GT.0) THEN
C     
C     -- FOR NEUTRINO
C     
#ifdef UPMU_RCK
         APICRSCC=FNAPICRS(E,IPAR,1,RATP,R1320CC)
         APICRSNC=FNAPICRS(E,IPAR,0,RATN,R1320NC)
#else
         APICRSCC=FNAPICRS(E,IPAR,1,-1.,R1320CC)
         APICRSNC=FNAPICRS(E,IPAR,0,-1.,R1320NC)
#endif
         XCCQE =FNELSPAU_SELECT(E,IPAR)*RATN*CRSNEUT(1)

         XCC1PI=XCC1PI+RSSPICRS(ETMP,IPAR,1)*RATP*CRSNEUT(2)
         XCC1PI=XCC1PI+RSSPICRS(ETMP,IPAR,2)*RATN*CRSNEUT(3)
         XCC1PI=XCC1PI+RSSPICRS(ETMP,IPAR,3)*RATN*CRSNEUT(4)

*         TOTCRS=TOTCRS+FNAPICRS(E,IPAR,1,-1.,R1314)*CRSNEUT(5) !-- OLD

         XCCMPI=XCCMPI+APICRSCC*R1320CC*CRSNEUT(5)

         XNCALL=XNCALL+RSSPICRS(ETMP,IPAR,11)*RATN*CRSNEUT(6)
         XNCALL=XNCALL+RSSPICRS(ETMP,IPAR,12)*RATP*CRSNEUT(7)
         XNCALL=XNCALL+RSSPICRS(ETMP,IPAR,13)*RATN*CRSNEUT(8)
         XNCALL=XNCALL+RSSPICRS(ETMP,IPAR,14)*RATP*CRSNEUT(9)

*         TOTCRS=TOTCRS+FNAPICRS(E,IPAR,0,-1.,R1314)*CRSNEUT(10)

         XNCALL=XNCALL+APICRSNC*R1320NC*CRSNEUT(10)

         XNCALL=XNCALL+FNELSCRN(E,IPAR,2212)*RATFRE*CRSNEUT(11)
         XNCALL=XNCALL+FNELSPAN(E,IPAR,2212)*(RATP-RATFRE)
     $        *CRSNEUT(12)
         XNCALL=XNCALL+FNELSPAN(E,IPAR,2112)*RATN*CRSNEUT(13)

         XCCCOH=XCCCOH+COHCRSNE(E,IPAR,1) /MOLECULE*CRSNEUT(14)

         XNCALL=XNCALL+COHCRSNE(E,IPAR,0) /MOLECULE*CRSNEUT(15)

         XCCMPI=XCCMPI+RSSETCRS(ETMP,IPAR,1)*RATN*CRSNEUT(16)

         XNCALL=XNCALL+RSSETCRS(ETMP,IPAR,11)*RATN*CRSNEUT(17)
         XNCALL=XNCALL+RSSETCRS(ETMP,IPAR,12)*RATP*CRSNEUT(18)

         XCCMPI=XCCMPI+RSSKCRS(ETMP,IPAR,1)*RATN*CRSNEUT(19)

         XNCALL=XNCALL+RSSKCRS(ETMP,IPAR,11)*RATN*CRSNEUT(20)
         XNCALL=XNCALL+RSSKCRS(ETMP,IPAR,12)*RATP*CRSNEUT(21)

         XCCMPI=XCCMPI+APICRSCC*(1.-R1320CC)*CRSNEUT(23)

         XNCALL=XNCALL+APICRSNC*(1.-R1320NC)*CRSNEUT(24)

         XCC1PI=XCC1PI+RSSGCRS(E,IPAR, 1)*RATN*CRSNEUT(25)

         XNCALL=XNCALL+RSSGCRS(E,IPAR,11)*RATN*CRSNEUT(26)
         XNCALL=XNCALL+RSSGCRS(E,IPAR,12)*RATP*CRSNEUT(27)

      ELSE
C     
C     -- FOR ANTI NEUTRINO
C     
#ifdef UPMU_RCK
         APICRSCC=FNAPICRS(E,IPAR,1,RATP,R1320CC)
         APICRSNC=FNAPICRS(E,IPAR,0,RATN,R1320NC)
#else
         APICRSCC=FNAPICRS(E,IPAR,1,-1.,R1320CC)
         APICRSNC=FNAPICRS(E,IPAR,0,-1.,R1320NC)
#endif
         XCCQE =FNELSCRS(E,IPAR)*RATFRE*CRSNEUTB(1)

         XCC1PI=XCC1PI+RSSPICRS(ETMP,IPAR,4)*RATN*CRSNEUTB(2)
         XCC1PI=XCC1PI+RSSPICRS(ETMP,IPAR,5)*RATP*CRSNEUTB(4)
         XCC1PI=XCC1PI+RSSPICRS(ETMP,IPAR,6)*RATP*CRSNEUTB(3)

*         TOTCRS=TOTCRS+FNAPICRS(E,IPAR,1,-1.,R1314)*CRSNEUTB(5)

         XCCMPI=XCCMPI+APICRSCC*R1320CC*CRSNEUTB(5)

         XNCALL=XNCALL+RSSPICRS(ETMP,IPAR,15)*RATN*CRSNEUTB(6)
         XNCALL=XNCALL+RSSPICRS(ETMP,IPAR,16)*RATP*CRSNEUTB(7)
         XNCALL=XNCALL+RSSPICRS(ETMP,IPAR,17)*RATN*CRSNEUTB(8)
         XNCALL=XNCALL+RSSPICRS(ETMP,IPAR,18)*RATP*CRSNEUTB(9)

*         TOTCRS=TOTCRS+FNAPICRS(E,IPAR,0,-1.,R1314)*CRSNEUTB(10)
         XNCALL=XNCALL+APICRSNC*R1320NC*CRSNEUTB(10)

         XCCQE =XCCQE +FNELSPAU_SELECT(E,IPAR)*(RATP-RATFRE)*CRSNEUTB(11)

         XNCALL=XNCALL+FNELSCRN(E,IPAR,2212)*RATFRE*CRSNEUTB(12)
         XNCALL=XNCALL+FNELSPAN(E,IPAR,2212)*(RATP-RATFRE)
     $        *CRSNEUTB(13)
         XNCALL=XNCALL+FNELSPAN(E,IPAR,2112)*RATN*CRSNEUTB(14)

         XCCCOH=XCCCOH+COHCRSNE(E,IPAR,1) /MOLECULE*CRSNEUTB(15)

         XNCALL=XNCALL+COHCRSNE(E,IPAR,0) /MOLECULE*CRSNEUTB(16)

         XCCMPI=XCCMPI+RSSETCRS(ETMP,IPAR,2)*RATP*CRSNEUTB(17)

         XNCALL=XNCALL+RSSETCRS(ETMP,IPAR,13)*RATN*CRSNEUTB(18)
         XNCALL=XNCALL+RSSETCRS(ETMP,IPAR,14)*RATP*CRSNEUTB(19)

         XCCMPI=XCCMPI+RSSKCRS(ETMP,IPAR,2)*RATP*CRSNEUTB(20)

         XNCALL=XNCALL+RSSKCRS(ETMP,IPAR,13)*RATN*CRSNEUTB(21)
         XNCALL=XNCALL+RSSKCRS(ETMP,IPAR,14)*RATP*CRSNEUTB(22)

         XCCMPI=XCCMPI+APICRSCC*(1.-R1320CC)*CRSNEUTB(23)

         XNCALL=XNCALL+APICRSNC*(1.-R1320NC)*CRSNEUTB(24)

         XCC1PI=XCC1PI+RSSGCRS(E,IPAR, 2)*RATP*CRSNEUTB(25)

         XNCALL=XNCALL+RSSGCRS(E,IPAR,13)*RATN*CRSNEUTB(26)
         XNCALL=XNCALL+RSSGCRS(E,IPAR,14)*RATP*CRSNEUTB(27)

      ENDIF

C      write(*,'(I4,F7.3,F10.6,F10.6,F10.6,F10.6,F10.6)')
C     $     ipar,e,XCCQE,XCC1PI,XCCCOH,XCCMPI,XNCALL

C      OSCPROB = 1.00000000-(sin(0.939625/E))*(sin(0.939625/E))
       factor = 1.27 * DM2 * 295.;
       OSCPROB = 1.00000000-(sin(factor/E))*(sin(factor/E))

      OSCCRS  = OSCPROB*(XCCQE+XCC1PI+XCCCOH+XCCMPI)+XNCALL
      TOTCRS  = (XCCQE+XCC1PI+XCCCOH+XCCMPI)+XNCALL

      write(*,'(I4,F7.3,F10.6,F10.6)')
     $     ipar,e,TOTCRS,OSCCRS

      RETURN
      END
