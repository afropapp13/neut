# Makefile.in generated by automake 1.15.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = neutcore
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libNEUTneutcore_a_AR = $(AR) $(ARFLAGS)
libNEUTneutcore_a_LIBADD =
am_libNEUTneutcore_a_OBJECTS = libNEUTneutcore_a-bbba05.$(OBJEXT) \
	libNEUTneutcore_a-fnelspau_sf.$(OBJEXT) \
	libNEUTneutcore_a-neelsvcp.$(OBJEXT) \
	libNEUTneutcore_a-pdfset.$(OBJEXT) \
	libNEUTneutcore_a-rsifl6g.$(OBJEXT) \
	libNEUTneutcore_a-fnelspf.$(OBJEXT) \
	libNEUTneutcore_a-neelsvct.$(OBJEXT) \
	libNEUTneutcore_a-qgdisg.$(OBJEXT) \
	libNEUTneutcore_a-rsifl7.$(OBJEXT) \
	libNEUTneutcore_a-cohcrsneberger.$(OBJEXT) \
	libNEUTneutcore_a-fnels_rpascl.$(OBJEXT) \
	libNEUTneutcore_a-neelsvnp.$(OBJEXT) \
	libNEUTneutcore_a-rnazi.$(OBJEXT) \
	libNEUTneutcore_a-rslzbte.$(OBJEXT) \
	libNEUTneutcore_a-cohcrsne.$(OBJEXT) \
	libNEUTneutcore_a-fnf2.$(OBJEXT) \
	libNEUTneutcore_a-neelsvnt.$(OBJEXT) \
	libNEUTneutcore_a-rnelq2.$(OBJEXT) \
	libNEUTneutcore_a-rslzbt.$(OBJEXT) \
	libNEUTneutcore_a-cohcrsnekart.$(OBJEXT) \
	libNEUTneutcore_a-fngamfct.$(OBJEXT) \
	libNEUTneutcore_a-neffect.$(OBJEXT) \
	libNEUTneutcore_a-rnmass.$(OBJEXT) \
	libNEUTneutcore_a-rslzbtg.$(OBJEXT) \
	libNEUTneutcore_a-cohcrsnerein.$(OBJEXT) \
	libNEUTneutcore_a-fnmec_nieves.$(OBJEXT) \
	libNEUTneutcore_a-nefillmodel.$(OBJEXT) \
	libNEUTneutcore_a-rnncelq2.$(OBJEXT) \
	libNEUTneutcore_a-rslzbtk.$(OBJEXT) \
	libNEUTneutcore_a-cohkartlamda.$(OBJEXT) \
	libNEUTneutcore_a-fnmec_select.$(OBJEXT) \
	libNEUTneutcore_a-nefillver.$(OBJEXT) \
	libNEUTneutcore_a-rnrot.$(OBJEXT) \
	libNEUTneutcore_a-rspauli.$(OBJEXT) \
	libNEUTneutcore_a-cohkartq2min.$(OBJEXT) \
	libNEUTneutcore_a-fnncelscrs.$(OBJEXT) \
	libNEUTneutcore_a-nefrmmom.$(OBJEXT) \
	libNEUTneutcore_a-rnw1320.$(OBJEXT) \
	libNEUTneutcore_a-rsrotvec.$(OBJEXT) \
	libNEUTneutcore_a-cohkarttmin.$(OBJEXT) \
	libNEUTneutcore_a-fnncq2max.$(OBJEXT) \
	libNEUTneutcore_a-negamnuc.$(OBJEXT) \
	libNEUTneutcore_a-rnw13.$(OBJEXT) \
	libNEUTneutcore_a-rssetcrs.$(OBJEXT) \
	libNEUTneutcore_a-cohkartwmax.$(OBJEXT) \
	libNEUTneutcore_a-fnncq2min.$(OBJEXT) \
	libNEUTneutcore_a-negenseed.$(OBJEXT) \
	libNEUTneutcore_a-rnw.$(OBJEXT) \
	libNEUTneutcore_a-rssetvct.$(OBJEXT) \
	libNEUTneutcore_a-cohma.$(OBJEXT) \
	libNEUTneutcore_a-fnnpot.$(OBJEXT) \
	libNEUTneutcore_a-negetr.$(OBJEXT) \
	libNEUTneutcore_a-rnxy.$(OBJEXT) \
	libNEUTneutcore_a-rssgcrs.$(OBJEXT) \
	libNEUTneutcore_a-dcohmxneberger.$(OBJEXT) \
	libNEUTneutcore_a-fnpkno2.$(OBJEXT) \
	libNEUTneutcore_a-nejet.$(OBJEXT) \
	libNEUTneutcore_a-rs3drt.$(OBJEXT) \
	libNEUTneutcore_a-rssgvct.$(OBJEXT) \
	libNEUTneutcore_a-dcohmxnekart.$(OBJEXT) \
	libNEUTneutcore_a-fnpkno.$(OBJEXT) \
	libNEUTneutcore_a-nek0.$(OBJEXT) \
	libNEUTneutcore_a-rsasum.$(OBJEXT) \
	libNEUTneutcore_a-rsskcrs.$(OBJEXT) \
	libNEUTneutcore_a-dcohmxnerein.$(OBJEXT) \
	libNEUTneutcore_a-fnq2max.$(OBJEXT) \
	libNEUTneutcore_a-nekindpa.$(OBJEXT) \
	libNEUTneutcore_a-rsasumg.$(OBJEXT) \
	libNEUTneutcore_a-rsskvct.$(OBJEXT) \
	libNEUTneutcore_a-dcohneberger.$(OBJEXT) \
	libNEUTneutcore_a-fnq2min.$(OBJEXT) \
	libNEUTneutcore_a-neknopar.$(OBJEXT) \
	libNEUTneutcore_a-rsclfme.$(OBJEXT) \
	libNEUTneutcore_a-rsspicrs.$(OBJEXT) \
	libNEUTneutcore_a-dcohnekart.$(OBJEXT) \
	libNEUTneutcore_a-fnrworld.$(OBJEXT) \
	libNEUTneutcore_a-nelibver.$(OBJEXT) \
	libNEUTneutcore_a-rsclfm.$(OBJEXT) \
	libNEUTneutcore_a-rsspivct.$(OBJEXT) \
	libNEUTneutcore_a-dcohnerein.$(OBJEXT) \
	libNEUTneutcore_a-fntotpau.$(OBJEXT) \
	libNEUTneutcore_a-nemechad.$(OBJEXT) \
	libNEUTneutcore_a-rsclfmg.$(OBJEXT) \
	libNEUTneutcore_a-rs.spivcttest.$(OBJEXT) \
	libNEUTneutcore_a-ddifcrs.$(OBJEXT) \
	libNEUTneutcore_a-fnxf3.$(OBJEXT) \
	libNEUTneutcore_a-nemeclpv.$(OBJEXT) \
	libNEUTneutcore_a-rsclfmk.$(OBJEXT) \
	libNEUTneutcore_a-ddifmx.$(OBJEXT) \
	libNEUTneutcore_a-fourVector.$(OBJEXT) \
	libNEUTneutcore_a-nemecvcp.$(OBJEXT) \
	libNEUTneutcore_a-rsdcrse.$(OBJEXT) \
	libNEUTneutcore_a-rstcrset.$(OBJEXT) \
	libNEUTneutcore_a-difcrsne.$(OBJEXT) \
	libNEUTneutcore_a-fvfrmgev.$(OBJEXT) \
	libNEUTneutcore_a-nemkgam.$(OBJEXT) \
	libNEUTneutcore_a-rsdcrs.$(OBJEXT) \
	libNEUTneutcore_a-rstcrsetm.$(OBJEXT) \
	libNEUTneutcore_a-difcrsnerein.$(OBJEXT) \
	libNEUTneutcore_a-grv94di.$(OBJEXT) \
	libNEUTneutcore_a-nemknpos.$(OBJEXT) \
	libNEUTneutcore_a-rsdcrsg.$(OBJEXT) \
	libNEUTneutcore_a-rstcrsetrd.$(OBJEXT) \
	libNEUTneutcore_a-dndxdy.$(OBJEXT) \
	libNEUTneutcore_a-grv98_lo.$(OBJEXT) \
	libNEUTneutcore_a-nemodgam.$(OBJEXT) \
	libNEUTneutcore_a-rsdcrsk.$(OBJEXT) \
	libNEUTneutcore_a-rstcrsett.$(OBJEXT) \
	libNEUTneutcore_a-dnela.$(OBJEXT) \
	libNEUTneutcore_a-lenstr.$(OBJEXT) \
	libNEUTneutcore_a-nemodsel.$(OBJEXT) \
	libNEUTneutcore_a-rsdiste.$(OBJEXT) \
	libNEUTneutcore_a-rstcrs.$(OBJEXT) \
	libNEUTneutcore_a-dnels.$(OBJEXT) \
	libNEUTneutcore_a-LH.$(OBJEXT) \
	libNEUTneutcore_a-nemultip.$(OBJEXT) \
	libNEUTneutcore_a-rsdist.$(OBJEXT) \
	libNEUTneutcore_a-rstcrsgamrd.$(OBJEXT) \
	libNEUTneutcore_a-dnelsnl.$(OBJEXT) \
	libNEUTneutcore_a-neapivct.$(OBJEXT) \
	libNEUTneutcore_a-nencelslpv.$(OBJEXT) \
	libNEUTneutcore_a-rsdistg.$(OBJEXT) \
	libNEUTneutcore_a-rstcrsg.$(OBJEXT) \
	libNEUTneutcore_a-dnelsq2.$(OBJEXT) \
	libNEUTneutcore_a-necard.$(OBJEXT) \
	libNEUTneutcore_a-nencelsspff.$(OBJEXT) \
	libNEUTneutcore_a-rsdistk.$(OBJEXT) \
	libNEUTneutcore_a-rstcrsgm.$(OBJEXT) \
	libNEUTneutcore_a-dnncela.$(OBJEXT) \
	libNEUTneutcore_a-nechadir.$(OBJEXT) \
	libNEUTneutcore_a-nencelsvcp.$(OBJEXT) \
	libNEUTneutcore_a-rsdt33e.$(OBJEXT) \
	libNEUTneutcore_a-rstcrsgt.$(OBJEXT) \
	libNEUTneutcore_a-dnncelsq2.$(OBJEXT) \
	libNEUTneutcore_a-necharge.$(OBJEXT) \
	libNEUTneutcore_a-rsdt33.$(OBJEXT) \
	libNEUTneutcore_a-rstcrsk.$(OBJEXT) \
	libNEUTneutcore_a-elaxff.$(OBJEXT) \
	libNEUTneutcore_a-nechkfb.$(OBJEXT) \
	libNEUTneutcore_a-nencelsvnp.$(OBJEXT) \
	libNEUTneutcore_a-rsdt33g.$(OBJEXT) \
	libNEUTneutcore_a-rstcrskm.$(OBJEXT) \
	libNEUTneutcore_a-evdifcrs.$(OBJEXT) \
	libNEUTneutcore_a-neclpos.$(OBJEXT) \
	libNEUTneutcore_a-nencelsvnt.$(OBJEXT) \
	libNEUTneutcore_a-rsdt33k.$(OBJEXT) \
	libNEUTneutcore_a-rstcrskrd.$(OBJEXT) \
	libNEUTneutcore_a-fnapicrs.$(OBJEXT) \
	libNEUTneutcore_a-neclrcrs.$(OBJEXT) \
	libNEUTneutcore_a-neomega.$(OBJEXT) \
	libNEUTneutcore_a-rsifl1e.$(OBJEXT) \
	libNEUTneutcore_a-rstcrskt.$(OBJEXT) \
	libNEUTneutcore_a-fndsigmapidt.$(OBJEXT) \
	libNEUTneutcore_a-neclrwrk.$(OBJEXT) \
	libNEUTneutcore_a-neranbll2.$(OBJEXT) \
	libNEUTneutcore_a-rsifl1.$(OBJEXT) \
	libNEUTneutcore_a-rstcrsm.$(OBJEXT) \
	libNEUTneutcore_a-fnelscrn.$(OBJEXT) \
	libNEUTneutcore_a-necohvct.$(OBJEXT) \
	libNEUTneutcore_a-neranbll.$(OBJEXT) \
	libNEUTneutcore_a-rsifl1k.$(OBJEXT) \
	libNEUTneutcore_a-rstcrsrd.$(OBJEXT) \
	libNEUTneutcore_a-fnelscrs.$(OBJEXT) \
	libNEUTneutcore_a-necpnewk.$(OBJEXT) \
	libNEUTneutcore_a-nerdseed.$(OBJEXT) \
	libNEUTneutcore_a-rsifl2e.$(OBJEXT) \
	libNEUTneutcore_a-rstcrst.$(OBJEXT) \
	libNEUTneutcore_a-fnels_erpascl.$(OBJEXT) \
	libNEUTneutcore_a-necrosel.$(OBJEXT) \
	libNEUTneutcore_a-nesetfgparams.$(OBJEXT) \
	libNEUTneutcore_a-rsifl2.$(OBJEXT) \
	libNEUTneutcore_a-rs.wdist.$(OBJEXT) \
	libNEUTneutcore_a-fnelsint.$(OBJEXT) \
	libNEUTneutcore_a-necrosin.$(OBJEXT) \
	libNEUTneutcore_a-nesettarg.$(OBJEXT) \
	libNEUTneutcore_a-rsifl2g.$(OBJEXT) \
	libNEUTneutcore_a-rsy00.$(OBJEXT) \
	libNEUTneutcore_a-fnelspan_effsf.$(OBJEXT) \
	libNEUTneutcore_a-necrosto.$(OBJEXT) \
	libNEUTneutcore_a-nesortdl.$(OBJEXT) \
	libNEUTneutcore_a-rsifl2k.$(OBJEXT) \
	libNEUTneutcore_a-rsy20.$(OBJEXT) \
	libNEUTneutcore_a-fnelspan.$(OBJEXT) \
	libNEUTneutcore_a-necrsmode.$(OBJEXT) \
	libNEUTneutcore_a-nevect.$(OBJEXT) \
	libNEUTneutcore_a-rsifl3e.$(OBJEXT) \
	libNEUTneutcore_a-rsy21.$(OBJEXT) \
	libNEUTneutcore_a-fnelspan_intpol.$(OBJEXT) \
	libNEUTneutcore_a-nedcy2bd.$(OBJEXT) \
	libNEUTneutcore_a-nevent.$(OBJEXT) \
	libNEUTneutcore_a-rsifl3.$(OBJEXT) \
	libNEUTneutcore_a-rsy22.$(OBJEXT) \
	libNEUTneutcore_a-fnelspan_sf.$(OBJEXT) \
	libNEUTneutcore_a-nedifvct.$(OBJEXT) \
	libNEUTneutcore_a-nrsettarg.$(OBJEXT) \
	libNEUTneutcore_a-rsifl3k.$(OBJEXT) \
	libNEUTneutcore_a-structm.$(OBJEXT) \
	libNEUTneutcore_a-fnelspau_effsf.$(OBJEXT) \
	libNEUTneutcore_a-neelslpv.$(OBJEXT) \
	libNEUTneutcore_a-nudeex.$(OBJEXT) \
	libNEUTneutcore_a-rsifl4.$(OBJEXT) \
	libNEUTneutcore_a-neelslvc.$(OBJEXT) \
	libNEUTneutcore_a-nudeex_n.$(OBJEXT) \
	libNEUTneutcore_a-rsifl4g.$(OBJEXT) \
	libNEUTneutcore_a-fnelspau_intpol.$(OBJEXT) \
	libNEUTneutcore_a-neelsspf.$(OBJEXT) \
	libNEUTneutcore_a-nudeex_org.$(OBJEXT) \
	libNEUTneutcore_a-rsifl5.$(OBJEXT) \
	libNEUTneutcore_a-fnelspau_select.$(OBJEXT) \
	libNEUTneutcore_a-neelsspff.$(OBJEXT) \
	libNEUTneutcore_a-nudeex_p.$(OBJEXT) \
	libNEUTneutcore_a-rsifl6.$(OBJEXT) \
	libNEUTneutcore_a-structg.$(OBJEXT) \
	libNEUTneutcore_a-bbba07.$(OBJEXT) \
	libNEUTneutcore_a-fa3comp.$(OBJEXT) \
	libNEUTneutcore_a-fazexp.$(OBJEXT) ddifnerein.$(OBJEXT) \
	qedifcrs.$(OBJEXT)
libNEUTneutcore_a_OBJECTS = $(am_libNEUTneutcore_a_OBJECTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
PPF77COMPILE = $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FFLAGS) $(FFLAGS)
LTPPF77COMPILE = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(F77) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_FFLAGS) $(FFLAGS)
AM_V_PPF77 = $(am__v_PPF77_@AM_V@)
am__v_PPF77_ = $(am__v_PPF77_@AM_DEFAULT_V@)
am__v_PPF77_0 = @echo "  PPF77   " $@;
am__v_PPF77_1 = 
F77LD = $(F77)
F77LINK = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_F77LD = $(am__v_F77LD_@AM_V@)
am__v_F77LD_ = $(am__v_F77LD_@AM_DEFAULT_V@)
am__v_F77LD_0 = @echo "  F77LD   " $@;
am__v_F77LD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
LTF77COMPILE = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(F77) $(AM_FFLAGS) $(FFLAGS)
AM_V_F77 = $(am__v_F77_@AM_V@)
am__v_F77_ = $(am__v_F77_@AM_DEFAULT_V@)
am__v_F77_0 = @echo "  F77     " $@;
am__v_F77_1 = 
SOURCES = $(libNEUTneutcore_a_SOURCES)
DIST_SOURCES = $(libNEUTneutcore_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/build.common \
	$(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CERN = @CERN@
CERN_LEVEL = @CERN_LEVEL@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FOUND_ROOTCONFIG = @FOUND_ROOTCONFIG@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NEUT_VERSION = @NEUT_VERSION@
NEUT_VERSION_NUM = @NEUT_VERSION_NUM@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
NEUT_INCLUDES = -I$(top_srcdir)/radcorr -I$(top_srcdir)/tauola -I$(top_srcdir)/mec -I$(top_srcdir)/ht2p2h/inc -I$(top_srcdir)/nuccorspl -I$(top_srcdir)/zbsfns -I$(top_srcdir)/n1p1h/inc -I$(top_srcdir)/nuceff -I$(top_srcdir)/kamflux -I$(top_srcdir)/nuclsmpl -I$(top_srcdir)/skmcsvc -I$(top_srcdir)/neutcore -I$(top_srcdir)/partnuck -I$(top_srcdir)/specfunc -I$(top_srcdir)/t2kflux_zbs -I$(top_builddir)/neutcore -I$(top_builddir)/skmcsvc -I$(top_builddir)/n1p1h -I$(top_builddir)/nuccorspl -I$(top_builddir)/nuceff
NEUT_STATIC_LIBS = $(top_srcdir)/neutclass/libNEUTneutclassUtils.a $(top_srcdir)/neutcore/libNEUTneutcore.a $(top_srcdir)/nuccorspl/libNEUTnuccorspl.a $(top_srcdir)/nuceff/libNEUTnuceff.a $(top_srcdir)/n1p1h/libNEUTn1p1h.a $(top_srcdir)/ht2p2h/libNEUTht2p2h.a $(top_srcdir)/radcorr/libNEUTradcorr.a $(top_srcdir)/tauola/libNEUTtauola.a $(top_srcdir)/specfunc/libNEUTspecfunc.a $(top_srcdir)/skmcsvc/libNEUTskmcsvc.a $(top_srcdir)/zbsfns/libNEUTzbsfns.a $(top_srcdir)/partnuck/libNEUTpartnuck.a
CERN_ROOT = $(CERN)/$(CERN_LEVEL)/include
CERN_LINKFLAGS := $(shell cernlib jetset74 pdflib804 photos202 mathlib packlib kernlib)
NEUT_FFLAGS = -fno-backslash -fno-automatic -fno-second-underscore -ffixed-line-length-132 -fdollar-ok -fPIC -fbounds-check -Wall -W -ffpe-trap=invalid,zero,overflow -DstrictF77 -DgFortran -Df2cFortran
DEFAULT_FFLAGS = $(NEUT_FFLAGS) $(NEUT_INCLUDES) -I$(CERN_ROOT)
DEFAULT_CXXFLAGS = -fPIC $(NEUT_INCLUDES) -I$(CERN_ROOT) $(shell root-config --cflags)
ROOT_LINKFLAGS = $(shell root-config --glibs)

# I know... but this seems to work
EXE_LINKFLAGS = -fno-PIE -fno-pie -no-pie
lib_LIBRARIES = libNEUTneutcore.a
libNEUTneutcore_a_FFLAGS = -DNECORE_VERSION=@NEUT_VERSION_NUM@ $(DEFAULT_FFLAGS)
libNEUTneutcore_a_CXXFLAGS = -DNECORE_VERSION=@NEUT_VERSION_NUM@ $(DEFAULT_CXXFLAGS)
libNEUTneutcore_a_SOURCES = bbba05.F fnelspau_sf.F neelsvcp.F pdfset.F \
	rsifl6g.F fnelspf.F neelsvct.F qgdisg.F rsifl7.F \
	cohcrsneberger.F fnels_rpascl.F neelsvnp.F rnazi.F rslzbte.F \
	cohcrsne.F fnf2.F neelsvnt.F rnelq2.F rslzbt.F cohcrsnekart.F \
	fngamfct.F neffect.F rnmass.F rslzbtg.F cohcrsnerein.F \
	fnmec_nieves.F nefillmodel.F rnncelq2.F rslzbtk.F \
	cohkartlamda.F fnmec_select.F nefillver.F rnrot.F rspauli.F \
	cohkartq2min.F fnncelscrs.F nefrmmom.F rnw1320.F rsrotvec.F \
	cohkarttmin.F fnncq2max.F negamnuc.F rnw13.F rssetcrs.F \
	cohkartwmax.F fnncq2min.F negenseed.F rnw.F rssetvct.F cohma.F \
	fnnpot.F negetr.F rnxy.F rssgcrs.F dcohmxneberger.F fnpkno2.F \
	nejet.F rs3drt.F rssgvct.F dcohmxnekart.F fnpkno.F nek0.F \
	rsasum.F rsskcrs.F dcohmxnerein.F fnq2max.F nekindpa.F \
	rsasumg.F rsskvct.F dcohneberger.F fnq2min.F neknopar.F \
	rsclfme.F rsspicrs.F dcohnekart.F fnrworld.F nelibver.F \
	rsclfm.F rsspivct.F dcohnerein.F fntotpau.F nemechad.F \
	rsclfmg.F rs.spivcttest.F ddifcrs.F fnxf3.F nemeclpv.F \
	rsclfmk.F ddifmx.F fourVector.F nemecvcp.F rsdcrse.F \
	rstcrset.F difcrsne.F fvfrmgev.F nemkgam.F rsdcrs.F \
	rstcrsetm.F difcrsnerein.F grv94di.F nemknpos.F rsdcrsg.F \
	rstcrsetrd.F dndxdy.F grv98_lo.F nemodgam.F rsdcrsk.F \
	rstcrsett.F dnela.F lenstr.F nemodsel.F rsdiste.F rstcrs.F \
	dnels.F LH.F nemultip.F rsdist.F rstcrsgamrd.F dnelsnl.F \
	neapivct.F nencelslpv.F rsdistg.F rstcrsg.F dnelsq2.F necard.F \
	nencelsspff.F rsdistk.F rstcrsgm.F dnncela.F nechadir.F \
	nencelsvcp.F rsdt33e.F rstcrsgt.F dnncelsq2.F necharge.F \
	rsdt33.F rstcrsk.F elaxff.F nechkfb.F nencelsvnp.F rsdt33g.F \
	rstcrskm.F evdifcrs.F neclpos.F nencelsvnt.F rsdt33k.F \
	rstcrskrd.F fnapicrs.F neclrcrs.F neomega.F rsifl1e.F \
	rstcrskt.F fndsigmapidt.F neclrwrk.F neranbll2.F rsifl1.F \
	rstcrsm.F fnelscrn.F necohvct.F neranbll.F rsifl1k.F \
	rstcrsrd.F fnelscrs.F necpnewk.F nerdseed.F rsifl2e.F \
	rstcrst.F fnels_erpascl.F necrosel.F nesetfgparams.F rsifl2.F \
	rs.wdist.F fnelsint.F necrosin.F nesettarg.F rsifl2g.F rsy00.F \
	fnelspan_effsf.F necrosto.F nesortdl.F rsifl2k.F rsy20.F \
	fnelspan.F necrsmode.F nevect.F rsifl3e.F rsy21.F \
	fnelspan_intpol.F nedcy2bd.F nevent.F rsifl3.F rsy22.F \
	fnelspan_sf.F nedifvct.F nrsettarg.F rsifl3k.F structm.F \
	fnelspau_effsf.F neelslpv.F nudeex.F rsifl4.F neelslvc.F \
	nudeex_n.F rsifl4g.F fnelspau_intpol.F neelsspf.F nudeex_org.F \
	rsifl5.F fnelspau_select.F neelsspff.F nudeex_p.F rsifl6.F \
	structg.f bbba07.cc fa3comp.cc fazexp.cc ddifnerein.c \
	qedifcrs.c

# Unused sources that live in the directory
UNUSED_srcs = calcqecrs.F rs.tcrsdump.F nencelsvct.F fnelspau.F
all: all-am

.SUFFIXES:
.SUFFIXES: .F .c .cc .f .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/build.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign neutcore/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign neutcore/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/build.common $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

libNEUTneutcore.a: $(libNEUTneutcore_a_OBJECTS) $(libNEUTneutcore_a_DEPENDENCIES) $(EXTRA_libNEUTneutcore_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libNEUTneutcore.a
	$(AM_V_AR)$(libNEUTneutcore_a_AR) libNEUTneutcore.a $(libNEUTneutcore_a_OBJECTS) $(libNEUTneutcore_a_LIBADD)
	$(AM_V_at)$(RANLIB) libNEUTneutcore.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ddifnerein.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNEUTneutcore_a-bbba07.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNEUTneutcore_a-fa3comp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libNEUTneutcore_a-fazexp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qedifcrs.Po@am__quote@

.F.o:
	$(AM_V_PPF77)$(PPF77COMPILE) -c -o $@ $<

.F.obj:
	$(AM_V_PPF77)$(PPF77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.F.lo:
	$(AM_V_PPF77)$(LTPPF77COMPILE) -c -o $@ $<

libNEUTneutcore_a-bbba05.o: bbba05.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-bbba05.o `test -f 'bbba05.F' || echo '$(srcdir)/'`bbba05.F

libNEUTneutcore_a-bbba05.obj: bbba05.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-bbba05.obj `if test -f 'bbba05.F'; then $(CYGPATH_W) 'bbba05.F'; else $(CYGPATH_W) '$(srcdir)/bbba05.F'; fi`

libNEUTneutcore_a-fnelspau_sf.o: fnelspau_sf.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspau_sf.o `test -f 'fnelspau_sf.F' || echo '$(srcdir)/'`fnelspau_sf.F

libNEUTneutcore_a-fnelspau_sf.obj: fnelspau_sf.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspau_sf.obj `if test -f 'fnelspau_sf.F'; then $(CYGPATH_W) 'fnelspau_sf.F'; else $(CYGPATH_W) '$(srcdir)/fnelspau_sf.F'; fi`

libNEUTneutcore_a-neelsvcp.o: neelsvcp.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelsvcp.o `test -f 'neelsvcp.F' || echo '$(srcdir)/'`neelsvcp.F

libNEUTneutcore_a-neelsvcp.obj: neelsvcp.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelsvcp.obj `if test -f 'neelsvcp.F'; then $(CYGPATH_W) 'neelsvcp.F'; else $(CYGPATH_W) '$(srcdir)/neelsvcp.F'; fi`

libNEUTneutcore_a-pdfset.o: pdfset.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-pdfset.o `test -f 'pdfset.F' || echo '$(srcdir)/'`pdfset.F

libNEUTneutcore_a-pdfset.obj: pdfset.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-pdfset.obj `if test -f 'pdfset.F'; then $(CYGPATH_W) 'pdfset.F'; else $(CYGPATH_W) '$(srcdir)/pdfset.F'; fi`

libNEUTneutcore_a-rsifl6g.o: rsifl6g.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl6g.o `test -f 'rsifl6g.F' || echo '$(srcdir)/'`rsifl6g.F

libNEUTneutcore_a-rsifl6g.obj: rsifl6g.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl6g.obj `if test -f 'rsifl6g.F'; then $(CYGPATH_W) 'rsifl6g.F'; else $(CYGPATH_W) '$(srcdir)/rsifl6g.F'; fi`

libNEUTneutcore_a-fnelspf.o: fnelspf.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspf.o `test -f 'fnelspf.F' || echo '$(srcdir)/'`fnelspf.F

libNEUTneutcore_a-fnelspf.obj: fnelspf.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspf.obj `if test -f 'fnelspf.F'; then $(CYGPATH_W) 'fnelspf.F'; else $(CYGPATH_W) '$(srcdir)/fnelspf.F'; fi`

libNEUTneutcore_a-neelsvct.o: neelsvct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelsvct.o `test -f 'neelsvct.F' || echo '$(srcdir)/'`neelsvct.F

libNEUTneutcore_a-neelsvct.obj: neelsvct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelsvct.obj `if test -f 'neelsvct.F'; then $(CYGPATH_W) 'neelsvct.F'; else $(CYGPATH_W) '$(srcdir)/neelsvct.F'; fi`

libNEUTneutcore_a-qgdisg.o: qgdisg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-qgdisg.o `test -f 'qgdisg.F' || echo '$(srcdir)/'`qgdisg.F

libNEUTneutcore_a-qgdisg.obj: qgdisg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-qgdisg.obj `if test -f 'qgdisg.F'; then $(CYGPATH_W) 'qgdisg.F'; else $(CYGPATH_W) '$(srcdir)/qgdisg.F'; fi`

libNEUTneutcore_a-rsifl7.o: rsifl7.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl7.o `test -f 'rsifl7.F' || echo '$(srcdir)/'`rsifl7.F

libNEUTneutcore_a-rsifl7.obj: rsifl7.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl7.obj `if test -f 'rsifl7.F'; then $(CYGPATH_W) 'rsifl7.F'; else $(CYGPATH_W) '$(srcdir)/rsifl7.F'; fi`

libNEUTneutcore_a-cohcrsneberger.o: cohcrsneberger.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohcrsneberger.o `test -f 'cohcrsneberger.F' || echo '$(srcdir)/'`cohcrsneberger.F

libNEUTneutcore_a-cohcrsneberger.obj: cohcrsneberger.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohcrsneberger.obj `if test -f 'cohcrsneberger.F'; then $(CYGPATH_W) 'cohcrsneberger.F'; else $(CYGPATH_W) '$(srcdir)/cohcrsneberger.F'; fi`

libNEUTneutcore_a-fnels_rpascl.o: fnels_rpascl.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnels_rpascl.o `test -f 'fnels_rpascl.F' || echo '$(srcdir)/'`fnels_rpascl.F

libNEUTneutcore_a-fnels_rpascl.obj: fnels_rpascl.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnels_rpascl.obj `if test -f 'fnels_rpascl.F'; then $(CYGPATH_W) 'fnels_rpascl.F'; else $(CYGPATH_W) '$(srcdir)/fnels_rpascl.F'; fi`

libNEUTneutcore_a-neelsvnp.o: neelsvnp.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelsvnp.o `test -f 'neelsvnp.F' || echo '$(srcdir)/'`neelsvnp.F

libNEUTneutcore_a-neelsvnp.obj: neelsvnp.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelsvnp.obj `if test -f 'neelsvnp.F'; then $(CYGPATH_W) 'neelsvnp.F'; else $(CYGPATH_W) '$(srcdir)/neelsvnp.F'; fi`

libNEUTneutcore_a-rnazi.o: rnazi.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnazi.o `test -f 'rnazi.F' || echo '$(srcdir)/'`rnazi.F

libNEUTneutcore_a-rnazi.obj: rnazi.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnazi.obj `if test -f 'rnazi.F'; then $(CYGPATH_W) 'rnazi.F'; else $(CYGPATH_W) '$(srcdir)/rnazi.F'; fi`

libNEUTneutcore_a-rslzbte.o: rslzbte.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rslzbte.o `test -f 'rslzbte.F' || echo '$(srcdir)/'`rslzbte.F

libNEUTneutcore_a-rslzbte.obj: rslzbte.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rslzbte.obj `if test -f 'rslzbte.F'; then $(CYGPATH_W) 'rslzbte.F'; else $(CYGPATH_W) '$(srcdir)/rslzbte.F'; fi`

libNEUTneutcore_a-cohcrsne.o: cohcrsne.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohcrsne.o `test -f 'cohcrsne.F' || echo '$(srcdir)/'`cohcrsne.F

libNEUTneutcore_a-cohcrsne.obj: cohcrsne.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohcrsne.obj `if test -f 'cohcrsne.F'; then $(CYGPATH_W) 'cohcrsne.F'; else $(CYGPATH_W) '$(srcdir)/cohcrsne.F'; fi`

libNEUTneutcore_a-fnf2.o: fnf2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnf2.o `test -f 'fnf2.F' || echo '$(srcdir)/'`fnf2.F

libNEUTneutcore_a-fnf2.obj: fnf2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnf2.obj `if test -f 'fnf2.F'; then $(CYGPATH_W) 'fnf2.F'; else $(CYGPATH_W) '$(srcdir)/fnf2.F'; fi`

libNEUTneutcore_a-neelsvnt.o: neelsvnt.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelsvnt.o `test -f 'neelsvnt.F' || echo '$(srcdir)/'`neelsvnt.F

libNEUTneutcore_a-neelsvnt.obj: neelsvnt.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelsvnt.obj `if test -f 'neelsvnt.F'; then $(CYGPATH_W) 'neelsvnt.F'; else $(CYGPATH_W) '$(srcdir)/neelsvnt.F'; fi`

libNEUTneutcore_a-rnelq2.o: rnelq2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnelq2.o `test -f 'rnelq2.F' || echo '$(srcdir)/'`rnelq2.F

libNEUTneutcore_a-rnelq2.obj: rnelq2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnelq2.obj `if test -f 'rnelq2.F'; then $(CYGPATH_W) 'rnelq2.F'; else $(CYGPATH_W) '$(srcdir)/rnelq2.F'; fi`

libNEUTneutcore_a-rslzbt.o: rslzbt.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rslzbt.o `test -f 'rslzbt.F' || echo '$(srcdir)/'`rslzbt.F

libNEUTneutcore_a-rslzbt.obj: rslzbt.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rslzbt.obj `if test -f 'rslzbt.F'; then $(CYGPATH_W) 'rslzbt.F'; else $(CYGPATH_W) '$(srcdir)/rslzbt.F'; fi`

libNEUTneutcore_a-cohcrsnekart.o: cohcrsnekart.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohcrsnekart.o `test -f 'cohcrsnekart.F' || echo '$(srcdir)/'`cohcrsnekart.F

libNEUTneutcore_a-cohcrsnekart.obj: cohcrsnekart.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohcrsnekart.obj `if test -f 'cohcrsnekart.F'; then $(CYGPATH_W) 'cohcrsnekart.F'; else $(CYGPATH_W) '$(srcdir)/cohcrsnekart.F'; fi`

libNEUTneutcore_a-fngamfct.o: fngamfct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fngamfct.o `test -f 'fngamfct.F' || echo '$(srcdir)/'`fngamfct.F

libNEUTneutcore_a-fngamfct.obj: fngamfct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fngamfct.obj `if test -f 'fngamfct.F'; then $(CYGPATH_W) 'fngamfct.F'; else $(CYGPATH_W) '$(srcdir)/fngamfct.F'; fi`

libNEUTneutcore_a-neffect.o: neffect.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neffect.o `test -f 'neffect.F' || echo '$(srcdir)/'`neffect.F

libNEUTneutcore_a-neffect.obj: neffect.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neffect.obj `if test -f 'neffect.F'; then $(CYGPATH_W) 'neffect.F'; else $(CYGPATH_W) '$(srcdir)/neffect.F'; fi`

libNEUTneutcore_a-rnmass.o: rnmass.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnmass.o `test -f 'rnmass.F' || echo '$(srcdir)/'`rnmass.F

libNEUTneutcore_a-rnmass.obj: rnmass.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnmass.obj `if test -f 'rnmass.F'; then $(CYGPATH_W) 'rnmass.F'; else $(CYGPATH_W) '$(srcdir)/rnmass.F'; fi`

libNEUTneutcore_a-rslzbtg.o: rslzbtg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rslzbtg.o `test -f 'rslzbtg.F' || echo '$(srcdir)/'`rslzbtg.F

libNEUTneutcore_a-rslzbtg.obj: rslzbtg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rslzbtg.obj `if test -f 'rslzbtg.F'; then $(CYGPATH_W) 'rslzbtg.F'; else $(CYGPATH_W) '$(srcdir)/rslzbtg.F'; fi`

libNEUTneutcore_a-cohcrsnerein.o: cohcrsnerein.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohcrsnerein.o `test -f 'cohcrsnerein.F' || echo '$(srcdir)/'`cohcrsnerein.F

libNEUTneutcore_a-cohcrsnerein.obj: cohcrsnerein.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohcrsnerein.obj `if test -f 'cohcrsnerein.F'; then $(CYGPATH_W) 'cohcrsnerein.F'; else $(CYGPATH_W) '$(srcdir)/cohcrsnerein.F'; fi`

libNEUTneutcore_a-fnmec_nieves.o: fnmec_nieves.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnmec_nieves.o `test -f 'fnmec_nieves.F' || echo '$(srcdir)/'`fnmec_nieves.F

libNEUTneutcore_a-fnmec_nieves.obj: fnmec_nieves.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnmec_nieves.obj `if test -f 'fnmec_nieves.F'; then $(CYGPATH_W) 'fnmec_nieves.F'; else $(CYGPATH_W) '$(srcdir)/fnmec_nieves.F'; fi`

libNEUTneutcore_a-nefillmodel.o: nefillmodel.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nefillmodel.o `test -f 'nefillmodel.F' || echo '$(srcdir)/'`nefillmodel.F

libNEUTneutcore_a-nefillmodel.obj: nefillmodel.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nefillmodel.obj `if test -f 'nefillmodel.F'; then $(CYGPATH_W) 'nefillmodel.F'; else $(CYGPATH_W) '$(srcdir)/nefillmodel.F'; fi`

libNEUTneutcore_a-rnncelq2.o: rnncelq2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnncelq2.o `test -f 'rnncelq2.F' || echo '$(srcdir)/'`rnncelq2.F

libNEUTneutcore_a-rnncelq2.obj: rnncelq2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnncelq2.obj `if test -f 'rnncelq2.F'; then $(CYGPATH_W) 'rnncelq2.F'; else $(CYGPATH_W) '$(srcdir)/rnncelq2.F'; fi`

libNEUTneutcore_a-rslzbtk.o: rslzbtk.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rslzbtk.o `test -f 'rslzbtk.F' || echo '$(srcdir)/'`rslzbtk.F

libNEUTneutcore_a-rslzbtk.obj: rslzbtk.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rslzbtk.obj `if test -f 'rslzbtk.F'; then $(CYGPATH_W) 'rslzbtk.F'; else $(CYGPATH_W) '$(srcdir)/rslzbtk.F'; fi`

libNEUTneutcore_a-cohkartlamda.o: cohkartlamda.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohkartlamda.o `test -f 'cohkartlamda.F' || echo '$(srcdir)/'`cohkartlamda.F

libNEUTneutcore_a-cohkartlamda.obj: cohkartlamda.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohkartlamda.obj `if test -f 'cohkartlamda.F'; then $(CYGPATH_W) 'cohkartlamda.F'; else $(CYGPATH_W) '$(srcdir)/cohkartlamda.F'; fi`

libNEUTneutcore_a-fnmec_select.o: fnmec_select.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnmec_select.o `test -f 'fnmec_select.F' || echo '$(srcdir)/'`fnmec_select.F

libNEUTneutcore_a-fnmec_select.obj: fnmec_select.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnmec_select.obj `if test -f 'fnmec_select.F'; then $(CYGPATH_W) 'fnmec_select.F'; else $(CYGPATH_W) '$(srcdir)/fnmec_select.F'; fi`

libNEUTneutcore_a-nefillver.o: nefillver.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nefillver.o `test -f 'nefillver.F' || echo '$(srcdir)/'`nefillver.F

libNEUTneutcore_a-nefillver.obj: nefillver.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nefillver.obj `if test -f 'nefillver.F'; then $(CYGPATH_W) 'nefillver.F'; else $(CYGPATH_W) '$(srcdir)/nefillver.F'; fi`

libNEUTneutcore_a-rnrot.o: rnrot.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnrot.o `test -f 'rnrot.F' || echo '$(srcdir)/'`rnrot.F

libNEUTneutcore_a-rnrot.obj: rnrot.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnrot.obj `if test -f 'rnrot.F'; then $(CYGPATH_W) 'rnrot.F'; else $(CYGPATH_W) '$(srcdir)/rnrot.F'; fi`

libNEUTneutcore_a-rspauli.o: rspauli.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rspauli.o `test -f 'rspauli.F' || echo '$(srcdir)/'`rspauli.F

libNEUTneutcore_a-rspauli.obj: rspauli.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rspauli.obj `if test -f 'rspauli.F'; then $(CYGPATH_W) 'rspauli.F'; else $(CYGPATH_W) '$(srcdir)/rspauli.F'; fi`

libNEUTneutcore_a-cohkartq2min.o: cohkartq2min.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohkartq2min.o `test -f 'cohkartq2min.F' || echo '$(srcdir)/'`cohkartq2min.F

libNEUTneutcore_a-cohkartq2min.obj: cohkartq2min.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohkartq2min.obj `if test -f 'cohkartq2min.F'; then $(CYGPATH_W) 'cohkartq2min.F'; else $(CYGPATH_W) '$(srcdir)/cohkartq2min.F'; fi`

libNEUTneutcore_a-fnncelscrs.o: fnncelscrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnncelscrs.o `test -f 'fnncelscrs.F' || echo '$(srcdir)/'`fnncelscrs.F

libNEUTneutcore_a-fnncelscrs.obj: fnncelscrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnncelscrs.obj `if test -f 'fnncelscrs.F'; then $(CYGPATH_W) 'fnncelscrs.F'; else $(CYGPATH_W) '$(srcdir)/fnncelscrs.F'; fi`

libNEUTneutcore_a-nefrmmom.o: nefrmmom.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nefrmmom.o `test -f 'nefrmmom.F' || echo '$(srcdir)/'`nefrmmom.F

libNEUTneutcore_a-nefrmmom.obj: nefrmmom.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nefrmmom.obj `if test -f 'nefrmmom.F'; then $(CYGPATH_W) 'nefrmmom.F'; else $(CYGPATH_W) '$(srcdir)/nefrmmom.F'; fi`

libNEUTneutcore_a-rnw1320.o: rnw1320.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnw1320.o `test -f 'rnw1320.F' || echo '$(srcdir)/'`rnw1320.F

libNEUTneutcore_a-rnw1320.obj: rnw1320.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnw1320.obj `if test -f 'rnw1320.F'; then $(CYGPATH_W) 'rnw1320.F'; else $(CYGPATH_W) '$(srcdir)/rnw1320.F'; fi`

libNEUTneutcore_a-rsrotvec.o: rsrotvec.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsrotvec.o `test -f 'rsrotvec.F' || echo '$(srcdir)/'`rsrotvec.F

libNEUTneutcore_a-rsrotvec.obj: rsrotvec.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsrotvec.obj `if test -f 'rsrotvec.F'; then $(CYGPATH_W) 'rsrotvec.F'; else $(CYGPATH_W) '$(srcdir)/rsrotvec.F'; fi`

libNEUTneutcore_a-cohkarttmin.o: cohkarttmin.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohkarttmin.o `test -f 'cohkarttmin.F' || echo '$(srcdir)/'`cohkarttmin.F

libNEUTneutcore_a-cohkarttmin.obj: cohkarttmin.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohkarttmin.obj `if test -f 'cohkarttmin.F'; then $(CYGPATH_W) 'cohkarttmin.F'; else $(CYGPATH_W) '$(srcdir)/cohkarttmin.F'; fi`

libNEUTneutcore_a-fnncq2max.o: fnncq2max.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnncq2max.o `test -f 'fnncq2max.F' || echo '$(srcdir)/'`fnncq2max.F

libNEUTneutcore_a-fnncq2max.obj: fnncq2max.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnncq2max.obj `if test -f 'fnncq2max.F'; then $(CYGPATH_W) 'fnncq2max.F'; else $(CYGPATH_W) '$(srcdir)/fnncq2max.F'; fi`

libNEUTneutcore_a-negamnuc.o: negamnuc.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-negamnuc.o `test -f 'negamnuc.F' || echo '$(srcdir)/'`negamnuc.F

libNEUTneutcore_a-negamnuc.obj: negamnuc.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-negamnuc.obj `if test -f 'negamnuc.F'; then $(CYGPATH_W) 'negamnuc.F'; else $(CYGPATH_W) '$(srcdir)/negamnuc.F'; fi`

libNEUTneutcore_a-rnw13.o: rnw13.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnw13.o `test -f 'rnw13.F' || echo '$(srcdir)/'`rnw13.F

libNEUTneutcore_a-rnw13.obj: rnw13.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnw13.obj `if test -f 'rnw13.F'; then $(CYGPATH_W) 'rnw13.F'; else $(CYGPATH_W) '$(srcdir)/rnw13.F'; fi`

libNEUTneutcore_a-rssetcrs.o: rssetcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rssetcrs.o `test -f 'rssetcrs.F' || echo '$(srcdir)/'`rssetcrs.F

libNEUTneutcore_a-rssetcrs.obj: rssetcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rssetcrs.obj `if test -f 'rssetcrs.F'; then $(CYGPATH_W) 'rssetcrs.F'; else $(CYGPATH_W) '$(srcdir)/rssetcrs.F'; fi`

libNEUTneutcore_a-cohkartwmax.o: cohkartwmax.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohkartwmax.o `test -f 'cohkartwmax.F' || echo '$(srcdir)/'`cohkartwmax.F

libNEUTneutcore_a-cohkartwmax.obj: cohkartwmax.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohkartwmax.obj `if test -f 'cohkartwmax.F'; then $(CYGPATH_W) 'cohkartwmax.F'; else $(CYGPATH_W) '$(srcdir)/cohkartwmax.F'; fi`

libNEUTneutcore_a-fnncq2min.o: fnncq2min.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnncq2min.o `test -f 'fnncq2min.F' || echo '$(srcdir)/'`fnncq2min.F

libNEUTneutcore_a-fnncq2min.obj: fnncq2min.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnncq2min.obj `if test -f 'fnncq2min.F'; then $(CYGPATH_W) 'fnncq2min.F'; else $(CYGPATH_W) '$(srcdir)/fnncq2min.F'; fi`

libNEUTneutcore_a-negenseed.o: negenseed.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-negenseed.o `test -f 'negenseed.F' || echo '$(srcdir)/'`negenseed.F

libNEUTneutcore_a-negenseed.obj: negenseed.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-negenseed.obj `if test -f 'negenseed.F'; then $(CYGPATH_W) 'negenseed.F'; else $(CYGPATH_W) '$(srcdir)/negenseed.F'; fi`

libNEUTneutcore_a-rnw.o: rnw.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnw.o `test -f 'rnw.F' || echo '$(srcdir)/'`rnw.F

libNEUTneutcore_a-rnw.obj: rnw.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnw.obj `if test -f 'rnw.F'; then $(CYGPATH_W) 'rnw.F'; else $(CYGPATH_W) '$(srcdir)/rnw.F'; fi`

libNEUTneutcore_a-rssetvct.o: rssetvct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rssetvct.o `test -f 'rssetvct.F' || echo '$(srcdir)/'`rssetvct.F

libNEUTneutcore_a-rssetvct.obj: rssetvct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rssetvct.obj `if test -f 'rssetvct.F'; then $(CYGPATH_W) 'rssetvct.F'; else $(CYGPATH_W) '$(srcdir)/rssetvct.F'; fi`

libNEUTneutcore_a-cohma.o: cohma.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohma.o `test -f 'cohma.F' || echo '$(srcdir)/'`cohma.F

libNEUTneutcore_a-cohma.obj: cohma.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-cohma.obj `if test -f 'cohma.F'; then $(CYGPATH_W) 'cohma.F'; else $(CYGPATH_W) '$(srcdir)/cohma.F'; fi`

libNEUTneutcore_a-fnnpot.o: fnnpot.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnnpot.o `test -f 'fnnpot.F' || echo '$(srcdir)/'`fnnpot.F

libNEUTneutcore_a-fnnpot.obj: fnnpot.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnnpot.obj `if test -f 'fnnpot.F'; then $(CYGPATH_W) 'fnnpot.F'; else $(CYGPATH_W) '$(srcdir)/fnnpot.F'; fi`

libNEUTneutcore_a-negetr.o: negetr.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-negetr.o `test -f 'negetr.F' || echo '$(srcdir)/'`negetr.F

libNEUTneutcore_a-negetr.obj: negetr.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-negetr.obj `if test -f 'negetr.F'; then $(CYGPATH_W) 'negetr.F'; else $(CYGPATH_W) '$(srcdir)/negetr.F'; fi`

libNEUTneutcore_a-rnxy.o: rnxy.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnxy.o `test -f 'rnxy.F' || echo '$(srcdir)/'`rnxy.F

libNEUTneutcore_a-rnxy.obj: rnxy.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rnxy.obj `if test -f 'rnxy.F'; then $(CYGPATH_W) 'rnxy.F'; else $(CYGPATH_W) '$(srcdir)/rnxy.F'; fi`

libNEUTneutcore_a-rssgcrs.o: rssgcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rssgcrs.o `test -f 'rssgcrs.F' || echo '$(srcdir)/'`rssgcrs.F

libNEUTneutcore_a-rssgcrs.obj: rssgcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rssgcrs.obj `if test -f 'rssgcrs.F'; then $(CYGPATH_W) 'rssgcrs.F'; else $(CYGPATH_W) '$(srcdir)/rssgcrs.F'; fi`

libNEUTneutcore_a-dcohmxneberger.o: dcohmxneberger.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dcohmxneberger.o `test -f 'dcohmxneberger.F' || echo '$(srcdir)/'`dcohmxneberger.F

libNEUTneutcore_a-dcohmxneberger.obj: dcohmxneberger.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dcohmxneberger.obj `if test -f 'dcohmxneberger.F'; then $(CYGPATH_W) 'dcohmxneberger.F'; else $(CYGPATH_W) '$(srcdir)/dcohmxneberger.F'; fi`

libNEUTneutcore_a-fnpkno2.o: fnpkno2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnpkno2.o `test -f 'fnpkno2.F' || echo '$(srcdir)/'`fnpkno2.F

libNEUTneutcore_a-fnpkno2.obj: fnpkno2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnpkno2.obj `if test -f 'fnpkno2.F'; then $(CYGPATH_W) 'fnpkno2.F'; else $(CYGPATH_W) '$(srcdir)/fnpkno2.F'; fi`

libNEUTneutcore_a-nejet.o: nejet.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nejet.o `test -f 'nejet.F' || echo '$(srcdir)/'`nejet.F

libNEUTneutcore_a-nejet.obj: nejet.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nejet.obj `if test -f 'nejet.F'; then $(CYGPATH_W) 'nejet.F'; else $(CYGPATH_W) '$(srcdir)/nejet.F'; fi`

libNEUTneutcore_a-rs3drt.o: rs3drt.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rs3drt.o `test -f 'rs3drt.F' || echo '$(srcdir)/'`rs3drt.F

libNEUTneutcore_a-rs3drt.obj: rs3drt.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rs3drt.obj `if test -f 'rs3drt.F'; then $(CYGPATH_W) 'rs3drt.F'; else $(CYGPATH_W) '$(srcdir)/rs3drt.F'; fi`

libNEUTneutcore_a-rssgvct.o: rssgvct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rssgvct.o `test -f 'rssgvct.F' || echo '$(srcdir)/'`rssgvct.F

libNEUTneutcore_a-rssgvct.obj: rssgvct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rssgvct.obj `if test -f 'rssgvct.F'; then $(CYGPATH_W) 'rssgvct.F'; else $(CYGPATH_W) '$(srcdir)/rssgvct.F'; fi`

libNEUTneutcore_a-dcohmxnekart.o: dcohmxnekart.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dcohmxnekart.o `test -f 'dcohmxnekart.F' || echo '$(srcdir)/'`dcohmxnekart.F

libNEUTneutcore_a-dcohmxnekart.obj: dcohmxnekart.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dcohmxnekart.obj `if test -f 'dcohmxnekart.F'; then $(CYGPATH_W) 'dcohmxnekart.F'; else $(CYGPATH_W) '$(srcdir)/dcohmxnekart.F'; fi`

libNEUTneutcore_a-fnpkno.o: fnpkno.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnpkno.o `test -f 'fnpkno.F' || echo '$(srcdir)/'`fnpkno.F

libNEUTneutcore_a-fnpkno.obj: fnpkno.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnpkno.obj `if test -f 'fnpkno.F'; then $(CYGPATH_W) 'fnpkno.F'; else $(CYGPATH_W) '$(srcdir)/fnpkno.F'; fi`

libNEUTneutcore_a-nek0.o: nek0.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nek0.o `test -f 'nek0.F' || echo '$(srcdir)/'`nek0.F

libNEUTneutcore_a-nek0.obj: nek0.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nek0.obj `if test -f 'nek0.F'; then $(CYGPATH_W) 'nek0.F'; else $(CYGPATH_W) '$(srcdir)/nek0.F'; fi`

libNEUTneutcore_a-rsasum.o: rsasum.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsasum.o `test -f 'rsasum.F' || echo '$(srcdir)/'`rsasum.F

libNEUTneutcore_a-rsasum.obj: rsasum.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsasum.obj `if test -f 'rsasum.F'; then $(CYGPATH_W) 'rsasum.F'; else $(CYGPATH_W) '$(srcdir)/rsasum.F'; fi`

libNEUTneutcore_a-rsskcrs.o: rsskcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsskcrs.o `test -f 'rsskcrs.F' || echo '$(srcdir)/'`rsskcrs.F

libNEUTneutcore_a-rsskcrs.obj: rsskcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsskcrs.obj `if test -f 'rsskcrs.F'; then $(CYGPATH_W) 'rsskcrs.F'; else $(CYGPATH_W) '$(srcdir)/rsskcrs.F'; fi`

libNEUTneutcore_a-dcohmxnerein.o: dcohmxnerein.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dcohmxnerein.o `test -f 'dcohmxnerein.F' || echo '$(srcdir)/'`dcohmxnerein.F

libNEUTneutcore_a-dcohmxnerein.obj: dcohmxnerein.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dcohmxnerein.obj `if test -f 'dcohmxnerein.F'; then $(CYGPATH_W) 'dcohmxnerein.F'; else $(CYGPATH_W) '$(srcdir)/dcohmxnerein.F'; fi`

libNEUTneutcore_a-fnq2max.o: fnq2max.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnq2max.o `test -f 'fnq2max.F' || echo '$(srcdir)/'`fnq2max.F

libNEUTneutcore_a-fnq2max.obj: fnq2max.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnq2max.obj `if test -f 'fnq2max.F'; then $(CYGPATH_W) 'fnq2max.F'; else $(CYGPATH_W) '$(srcdir)/fnq2max.F'; fi`

libNEUTneutcore_a-nekindpa.o: nekindpa.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nekindpa.o `test -f 'nekindpa.F' || echo '$(srcdir)/'`nekindpa.F

libNEUTneutcore_a-nekindpa.obj: nekindpa.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nekindpa.obj `if test -f 'nekindpa.F'; then $(CYGPATH_W) 'nekindpa.F'; else $(CYGPATH_W) '$(srcdir)/nekindpa.F'; fi`

libNEUTneutcore_a-rsasumg.o: rsasumg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsasumg.o `test -f 'rsasumg.F' || echo '$(srcdir)/'`rsasumg.F

libNEUTneutcore_a-rsasumg.obj: rsasumg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsasumg.obj `if test -f 'rsasumg.F'; then $(CYGPATH_W) 'rsasumg.F'; else $(CYGPATH_W) '$(srcdir)/rsasumg.F'; fi`

libNEUTneutcore_a-rsskvct.o: rsskvct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsskvct.o `test -f 'rsskvct.F' || echo '$(srcdir)/'`rsskvct.F

libNEUTneutcore_a-rsskvct.obj: rsskvct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsskvct.obj `if test -f 'rsskvct.F'; then $(CYGPATH_W) 'rsskvct.F'; else $(CYGPATH_W) '$(srcdir)/rsskvct.F'; fi`

libNEUTneutcore_a-dcohneberger.o: dcohneberger.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dcohneberger.o `test -f 'dcohneberger.F' || echo '$(srcdir)/'`dcohneberger.F

libNEUTneutcore_a-dcohneberger.obj: dcohneberger.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dcohneberger.obj `if test -f 'dcohneberger.F'; then $(CYGPATH_W) 'dcohneberger.F'; else $(CYGPATH_W) '$(srcdir)/dcohneberger.F'; fi`

libNEUTneutcore_a-fnq2min.o: fnq2min.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnq2min.o `test -f 'fnq2min.F' || echo '$(srcdir)/'`fnq2min.F

libNEUTneutcore_a-fnq2min.obj: fnq2min.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnq2min.obj `if test -f 'fnq2min.F'; then $(CYGPATH_W) 'fnq2min.F'; else $(CYGPATH_W) '$(srcdir)/fnq2min.F'; fi`

libNEUTneutcore_a-neknopar.o: neknopar.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neknopar.o `test -f 'neknopar.F' || echo '$(srcdir)/'`neknopar.F

libNEUTneutcore_a-neknopar.obj: neknopar.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neknopar.obj `if test -f 'neknopar.F'; then $(CYGPATH_W) 'neknopar.F'; else $(CYGPATH_W) '$(srcdir)/neknopar.F'; fi`

libNEUTneutcore_a-rsclfme.o: rsclfme.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsclfme.o `test -f 'rsclfme.F' || echo '$(srcdir)/'`rsclfme.F

libNEUTneutcore_a-rsclfme.obj: rsclfme.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsclfme.obj `if test -f 'rsclfme.F'; then $(CYGPATH_W) 'rsclfme.F'; else $(CYGPATH_W) '$(srcdir)/rsclfme.F'; fi`

libNEUTneutcore_a-rsspicrs.o: rsspicrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsspicrs.o `test -f 'rsspicrs.F' || echo '$(srcdir)/'`rsspicrs.F

libNEUTneutcore_a-rsspicrs.obj: rsspicrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsspicrs.obj `if test -f 'rsspicrs.F'; then $(CYGPATH_W) 'rsspicrs.F'; else $(CYGPATH_W) '$(srcdir)/rsspicrs.F'; fi`

libNEUTneutcore_a-dcohnekart.o: dcohnekart.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dcohnekart.o `test -f 'dcohnekart.F' || echo '$(srcdir)/'`dcohnekart.F

libNEUTneutcore_a-dcohnekart.obj: dcohnekart.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dcohnekart.obj `if test -f 'dcohnekart.F'; then $(CYGPATH_W) 'dcohnekart.F'; else $(CYGPATH_W) '$(srcdir)/dcohnekart.F'; fi`

libNEUTneutcore_a-fnrworld.o: fnrworld.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnrworld.o `test -f 'fnrworld.F' || echo '$(srcdir)/'`fnrworld.F

libNEUTneutcore_a-fnrworld.obj: fnrworld.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnrworld.obj `if test -f 'fnrworld.F'; then $(CYGPATH_W) 'fnrworld.F'; else $(CYGPATH_W) '$(srcdir)/fnrworld.F'; fi`

libNEUTneutcore_a-nelibver.o: nelibver.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nelibver.o `test -f 'nelibver.F' || echo '$(srcdir)/'`nelibver.F

libNEUTneutcore_a-nelibver.obj: nelibver.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nelibver.obj `if test -f 'nelibver.F'; then $(CYGPATH_W) 'nelibver.F'; else $(CYGPATH_W) '$(srcdir)/nelibver.F'; fi`

libNEUTneutcore_a-rsclfm.o: rsclfm.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsclfm.o `test -f 'rsclfm.F' || echo '$(srcdir)/'`rsclfm.F

libNEUTneutcore_a-rsclfm.obj: rsclfm.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsclfm.obj `if test -f 'rsclfm.F'; then $(CYGPATH_W) 'rsclfm.F'; else $(CYGPATH_W) '$(srcdir)/rsclfm.F'; fi`

libNEUTneutcore_a-rsspivct.o: rsspivct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsspivct.o `test -f 'rsspivct.F' || echo '$(srcdir)/'`rsspivct.F

libNEUTneutcore_a-rsspivct.obj: rsspivct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsspivct.obj `if test -f 'rsspivct.F'; then $(CYGPATH_W) 'rsspivct.F'; else $(CYGPATH_W) '$(srcdir)/rsspivct.F'; fi`

libNEUTneutcore_a-dcohnerein.o: dcohnerein.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dcohnerein.o `test -f 'dcohnerein.F' || echo '$(srcdir)/'`dcohnerein.F

libNEUTneutcore_a-dcohnerein.obj: dcohnerein.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dcohnerein.obj `if test -f 'dcohnerein.F'; then $(CYGPATH_W) 'dcohnerein.F'; else $(CYGPATH_W) '$(srcdir)/dcohnerein.F'; fi`

libNEUTneutcore_a-fntotpau.o: fntotpau.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fntotpau.o `test -f 'fntotpau.F' || echo '$(srcdir)/'`fntotpau.F

libNEUTneutcore_a-fntotpau.obj: fntotpau.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fntotpau.obj `if test -f 'fntotpau.F'; then $(CYGPATH_W) 'fntotpau.F'; else $(CYGPATH_W) '$(srcdir)/fntotpau.F'; fi`

libNEUTneutcore_a-nemechad.o: nemechad.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemechad.o `test -f 'nemechad.F' || echo '$(srcdir)/'`nemechad.F

libNEUTneutcore_a-nemechad.obj: nemechad.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemechad.obj `if test -f 'nemechad.F'; then $(CYGPATH_W) 'nemechad.F'; else $(CYGPATH_W) '$(srcdir)/nemechad.F'; fi`

libNEUTneutcore_a-rsclfmg.o: rsclfmg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsclfmg.o `test -f 'rsclfmg.F' || echo '$(srcdir)/'`rsclfmg.F

libNEUTneutcore_a-rsclfmg.obj: rsclfmg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsclfmg.obj `if test -f 'rsclfmg.F'; then $(CYGPATH_W) 'rsclfmg.F'; else $(CYGPATH_W) '$(srcdir)/rsclfmg.F'; fi`

libNEUTneutcore_a-rs.spivcttest.o: rs.spivcttest.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rs.spivcttest.o `test -f 'rs.spivcttest.F' || echo '$(srcdir)/'`rs.spivcttest.F

libNEUTneutcore_a-rs.spivcttest.obj: rs.spivcttest.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rs.spivcttest.obj `if test -f 'rs.spivcttest.F'; then $(CYGPATH_W) 'rs.spivcttest.F'; else $(CYGPATH_W) '$(srcdir)/rs.spivcttest.F'; fi`

libNEUTneutcore_a-ddifcrs.o: ddifcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-ddifcrs.o `test -f 'ddifcrs.F' || echo '$(srcdir)/'`ddifcrs.F

libNEUTneutcore_a-ddifcrs.obj: ddifcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-ddifcrs.obj `if test -f 'ddifcrs.F'; then $(CYGPATH_W) 'ddifcrs.F'; else $(CYGPATH_W) '$(srcdir)/ddifcrs.F'; fi`

libNEUTneutcore_a-fnxf3.o: fnxf3.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnxf3.o `test -f 'fnxf3.F' || echo '$(srcdir)/'`fnxf3.F

libNEUTneutcore_a-fnxf3.obj: fnxf3.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnxf3.obj `if test -f 'fnxf3.F'; then $(CYGPATH_W) 'fnxf3.F'; else $(CYGPATH_W) '$(srcdir)/fnxf3.F'; fi`

libNEUTneutcore_a-nemeclpv.o: nemeclpv.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemeclpv.o `test -f 'nemeclpv.F' || echo '$(srcdir)/'`nemeclpv.F

libNEUTneutcore_a-nemeclpv.obj: nemeclpv.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemeclpv.obj `if test -f 'nemeclpv.F'; then $(CYGPATH_W) 'nemeclpv.F'; else $(CYGPATH_W) '$(srcdir)/nemeclpv.F'; fi`

libNEUTneutcore_a-rsclfmk.o: rsclfmk.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsclfmk.o `test -f 'rsclfmk.F' || echo '$(srcdir)/'`rsclfmk.F

libNEUTneutcore_a-rsclfmk.obj: rsclfmk.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsclfmk.obj `if test -f 'rsclfmk.F'; then $(CYGPATH_W) 'rsclfmk.F'; else $(CYGPATH_W) '$(srcdir)/rsclfmk.F'; fi`

libNEUTneutcore_a-ddifmx.o: ddifmx.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-ddifmx.o `test -f 'ddifmx.F' || echo '$(srcdir)/'`ddifmx.F

libNEUTneutcore_a-ddifmx.obj: ddifmx.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-ddifmx.obj `if test -f 'ddifmx.F'; then $(CYGPATH_W) 'ddifmx.F'; else $(CYGPATH_W) '$(srcdir)/ddifmx.F'; fi`

libNEUTneutcore_a-fourVector.o: fourVector.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fourVector.o `test -f 'fourVector.F' || echo '$(srcdir)/'`fourVector.F

libNEUTneutcore_a-fourVector.obj: fourVector.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fourVector.obj `if test -f 'fourVector.F'; then $(CYGPATH_W) 'fourVector.F'; else $(CYGPATH_W) '$(srcdir)/fourVector.F'; fi`

libNEUTneutcore_a-nemecvcp.o: nemecvcp.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemecvcp.o `test -f 'nemecvcp.F' || echo '$(srcdir)/'`nemecvcp.F

libNEUTneutcore_a-nemecvcp.obj: nemecvcp.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemecvcp.obj `if test -f 'nemecvcp.F'; then $(CYGPATH_W) 'nemecvcp.F'; else $(CYGPATH_W) '$(srcdir)/nemecvcp.F'; fi`

libNEUTneutcore_a-rsdcrse.o: rsdcrse.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdcrse.o `test -f 'rsdcrse.F' || echo '$(srcdir)/'`rsdcrse.F

libNEUTneutcore_a-rsdcrse.obj: rsdcrse.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdcrse.obj `if test -f 'rsdcrse.F'; then $(CYGPATH_W) 'rsdcrse.F'; else $(CYGPATH_W) '$(srcdir)/rsdcrse.F'; fi`

libNEUTneutcore_a-rstcrset.o: rstcrset.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrset.o `test -f 'rstcrset.F' || echo '$(srcdir)/'`rstcrset.F

libNEUTneutcore_a-rstcrset.obj: rstcrset.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrset.obj `if test -f 'rstcrset.F'; then $(CYGPATH_W) 'rstcrset.F'; else $(CYGPATH_W) '$(srcdir)/rstcrset.F'; fi`

libNEUTneutcore_a-difcrsne.o: difcrsne.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-difcrsne.o `test -f 'difcrsne.F' || echo '$(srcdir)/'`difcrsne.F

libNEUTneutcore_a-difcrsne.obj: difcrsne.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-difcrsne.obj `if test -f 'difcrsne.F'; then $(CYGPATH_W) 'difcrsne.F'; else $(CYGPATH_W) '$(srcdir)/difcrsne.F'; fi`

libNEUTneutcore_a-fvfrmgev.o: fvfrmgev.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fvfrmgev.o `test -f 'fvfrmgev.F' || echo '$(srcdir)/'`fvfrmgev.F

libNEUTneutcore_a-fvfrmgev.obj: fvfrmgev.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fvfrmgev.obj `if test -f 'fvfrmgev.F'; then $(CYGPATH_W) 'fvfrmgev.F'; else $(CYGPATH_W) '$(srcdir)/fvfrmgev.F'; fi`

libNEUTneutcore_a-nemkgam.o: nemkgam.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemkgam.o `test -f 'nemkgam.F' || echo '$(srcdir)/'`nemkgam.F

libNEUTneutcore_a-nemkgam.obj: nemkgam.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemkgam.obj `if test -f 'nemkgam.F'; then $(CYGPATH_W) 'nemkgam.F'; else $(CYGPATH_W) '$(srcdir)/nemkgam.F'; fi`

libNEUTneutcore_a-rsdcrs.o: rsdcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdcrs.o `test -f 'rsdcrs.F' || echo '$(srcdir)/'`rsdcrs.F

libNEUTneutcore_a-rsdcrs.obj: rsdcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdcrs.obj `if test -f 'rsdcrs.F'; then $(CYGPATH_W) 'rsdcrs.F'; else $(CYGPATH_W) '$(srcdir)/rsdcrs.F'; fi`

libNEUTneutcore_a-rstcrsetm.o: rstcrsetm.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsetm.o `test -f 'rstcrsetm.F' || echo '$(srcdir)/'`rstcrsetm.F

libNEUTneutcore_a-rstcrsetm.obj: rstcrsetm.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsetm.obj `if test -f 'rstcrsetm.F'; then $(CYGPATH_W) 'rstcrsetm.F'; else $(CYGPATH_W) '$(srcdir)/rstcrsetm.F'; fi`

libNEUTneutcore_a-difcrsnerein.o: difcrsnerein.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-difcrsnerein.o `test -f 'difcrsnerein.F' || echo '$(srcdir)/'`difcrsnerein.F

libNEUTneutcore_a-difcrsnerein.obj: difcrsnerein.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-difcrsnerein.obj `if test -f 'difcrsnerein.F'; then $(CYGPATH_W) 'difcrsnerein.F'; else $(CYGPATH_W) '$(srcdir)/difcrsnerein.F'; fi`

libNEUTneutcore_a-grv94di.o: grv94di.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-grv94di.o `test -f 'grv94di.F' || echo '$(srcdir)/'`grv94di.F

libNEUTneutcore_a-grv94di.obj: grv94di.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-grv94di.obj `if test -f 'grv94di.F'; then $(CYGPATH_W) 'grv94di.F'; else $(CYGPATH_W) '$(srcdir)/grv94di.F'; fi`

libNEUTneutcore_a-nemknpos.o: nemknpos.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemknpos.o `test -f 'nemknpos.F' || echo '$(srcdir)/'`nemknpos.F

libNEUTneutcore_a-nemknpos.obj: nemknpos.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemknpos.obj `if test -f 'nemknpos.F'; then $(CYGPATH_W) 'nemknpos.F'; else $(CYGPATH_W) '$(srcdir)/nemknpos.F'; fi`

libNEUTneutcore_a-rsdcrsg.o: rsdcrsg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdcrsg.o `test -f 'rsdcrsg.F' || echo '$(srcdir)/'`rsdcrsg.F

libNEUTneutcore_a-rsdcrsg.obj: rsdcrsg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdcrsg.obj `if test -f 'rsdcrsg.F'; then $(CYGPATH_W) 'rsdcrsg.F'; else $(CYGPATH_W) '$(srcdir)/rsdcrsg.F'; fi`

libNEUTneutcore_a-rstcrsetrd.o: rstcrsetrd.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsetrd.o `test -f 'rstcrsetrd.F' || echo '$(srcdir)/'`rstcrsetrd.F

libNEUTneutcore_a-rstcrsetrd.obj: rstcrsetrd.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsetrd.obj `if test -f 'rstcrsetrd.F'; then $(CYGPATH_W) 'rstcrsetrd.F'; else $(CYGPATH_W) '$(srcdir)/rstcrsetrd.F'; fi`

libNEUTneutcore_a-dndxdy.o: dndxdy.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dndxdy.o `test -f 'dndxdy.F' || echo '$(srcdir)/'`dndxdy.F

libNEUTneutcore_a-dndxdy.obj: dndxdy.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dndxdy.obj `if test -f 'dndxdy.F'; then $(CYGPATH_W) 'dndxdy.F'; else $(CYGPATH_W) '$(srcdir)/dndxdy.F'; fi`

libNEUTneutcore_a-grv98_lo.o: grv98_lo.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-grv98_lo.o `test -f 'grv98_lo.F' || echo '$(srcdir)/'`grv98_lo.F

libNEUTneutcore_a-grv98_lo.obj: grv98_lo.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-grv98_lo.obj `if test -f 'grv98_lo.F'; then $(CYGPATH_W) 'grv98_lo.F'; else $(CYGPATH_W) '$(srcdir)/grv98_lo.F'; fi`

libNEUTneutcore_a-nemodgam.o: nemodgam.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemodgam.o `test -f 'nemodgam.F' || echo '$(srcdir)/'`nemodgam.F

libNEUTneutcore_a-nemodgam.obj: nemodgam.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemodgam.obj `if test -f 'nemodgam.F'; then $(CYGPATH_W) 'nemodgam.F'; else $(CYGPATH_W) '$(srcdir)/nemodgam.F'; fi`

libNEUTneutcore_a-rsdcrsk.o: rsdcrsk.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdcrsk.o `test -f 'rsdcrsk.F' || echo '$(srcdir)/'`rsdcrsk.F

libNEUTneutcore_a-rsdcrsk.obj: rsdcrsk.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdcrsk.obj `if test -f 'rsdcrsk.F'; then $(CYGPATH_W) 'rsdcrsk.F'; else $(CYGPATH_W) '$(srcdir)/rsdcrsk.F'; fi`

libNEUTneutcore_a-rstcrsett.o: rstcrsett.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsett.o `test -f 'rstcrsett.F' || echo '$(srcdir)/'`rstcrsett.F

libNEUTneutcore_a-rstcrsett.obj: rstcrsett.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsett.obj `if test -f 'rstcrsett.F'; then $(CYGPATH_W) 'rstcrsett.F'; else $(CYGPATH_W) '$(srcdir)/rstcrsett.F'; fi`

libNEUTneutcore_a-dnela.o: dnela.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dnela.o `test -f 'dnela.F' || echo '$(srcdir)/'`dnela.F

libNEUTneutcore_a-dnela.obj: dnela.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dnela.obj `if test -f 'dnela.F'; then $(CYGPATH_W) 'dnela.F'; else $(CYGPATH_W) '$(srcdir)/dnela.F'; fi`

libNEUTneutcore_a-lenstr.o: lenstr.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-lenstr.o `test -f 'lenstr.F' || echo '$(srcdir)/'`lenstr.F

libNEUTneutcore_a-lenstr.obj: lenstr.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-lenstr.obj `if test -f 'lenstr.F'; then $(CYGPATH_W) 'lenstr.F'; else $(CYGPATH_W) '$(srcdir)/lenstr.F'; fi`

libNEUTneutcore_a-nemodsel.o: nemodsel.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemodsel.o `test -f 'nemodsel.F' || echo '$(srcdir)/'`nemodsel.F

libNEUTneutcore_a-nemodsel.obj: nemodsel.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemodsel.obj `if test -f 'nemodsel.F'; then $(CYGPATH_W) 'nemodsel.F'; else $(CYGPATH_W) '$(srcdir)/nemodsel.F'; fi`

libNEUTneutcore_a-rsdiste.o: rsdiste.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdiste.o `test -f 'rsdiste.F' || echo '$(srcdir)/'`rsdiste.F

libNEUTneutcore_a-rsdiste.obj: rsdiste.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdiste.obj `if test -f 'rsdiste.F'; then $(CYGPATH_W) 'rsdiste.F'; else $(CYGPATH_W) '$(srcdir)/rsdiste.F'; fi`

libNEUTneutcore_a-rstcrs.o: rstcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrs.o `test -f 'rstcrs.F' || echo '$(srcdir)/'`rstcrs.F

libNEUTneutcore_a-rstcrs.obj: rstcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrs.obj `if test -f 'rstcrs.F'; then $(CYGPATH_W) 'rstcrs.F'; else $(CYGPATH_W) '$(srcdir)/rstcrs.F'; fi`

libNEUTneutcore_a-dnels.o: dnels.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dnels.o `test -f 'dnels.F' || echo '$(srcdir)/'`dnels.F

libNEUTneutcore_a-dnels.obj: dnels.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dnels.obj `if test -f 'dnels.F'; then $(CYGPATH_W) 'dnels.F'; else $(CYGPATH_W) '$(srcdir)/dnels.F'; fi`

libNEUTneutcore_a-LH.o: LH.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-LH.o `test -f 'LH.F' || echo '$(srcdir)/'`LH.F

libNEUTneutcore_a-LH.obj: LH.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-LH.obj `if test -f 'LH.F'; then $(CYGPATH_W) 'LH.F'; else $(CYGPATH_W) '$(srcdir)/LH.F'; fi`

libNEUTneutcore_a-nemultip.o: nemultip.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemultip.o `test -f 'nemultip.F' || echo '$(srcdir)/'`nemultip.F

libNEUTneutcore_a-nemultip.obj: nemultip.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nemultip.obj `if test -f 'nemultip.F'; then $(CYGPATH_W) 'nemultip.F'; else $(CYGPATH_W) '$(srcdir)/nemultip.F'; fi`

libNEUTneutcore_a-rsdist.o: rsdist.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdist.o `test -f 'rsdist.F' || echo '$(srcdir)/'`rsdist.F

libNEUTneutcore_a-rsdist.obj: rsdist.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdist.obj `if test -f 'rsdist.F'; then $(CYGPATH_W) 'rsdist.F'; else $(CYGPATH_W) '$(srcdir)/rsdist.F'; fi`

libNEUTneutcore_a-rstcrsgamrd.o: rstcrsgamrd.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsgamrd.o `test -f 'rstcrsgamrd.F' || echo '$(srcdir)/'`rstcrsgamrd.F

libNEUTneutcore_a-rstcrsgamrd.obj: rstcrsgamrd.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsgamrd.obj `if test -f 'rstcrsgamrd.F'; then $(CYGPATH_W) 'rstcrsgamrd.F'; else $(CYGPATH_W) '$(srcdir)/rstcrsgamrd.F'; fi`

libNEUTneutcore_a-dnelsnl.o: dnelsnl.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dnelsnl.o `test -f 'dnelsnl.F' || echo '$(srcdir)/'`dnelsnl.F

libNEUTneutcore_a-dnelsnl.obj: dnelsnl.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dnelsnl.obj `if test -f 'dnelsnl.F'; then $(CYGPATH_W) 'dnelsnl.F'; else $(CYGPATH_W) '$(srcdir)/dnelsnl.F'; fi`

libNEUTneutcore_a-neapivct.o: neapivct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neapivct.o `test -f 'neapivct.F' || echo '$(srcdir)/'`neapivct.F

libNEUTneutcore_a-neapivct.obj: neapivct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neapivct.obj `if test -f 'neapivct.F'; then $(CYGPATH_W) 'neapivct.F'; else $(CYGPATH_W) '$(srcdir)/neapivct.F'; fi`

libNEUTneutcore_a-nencelslpv.o: nencelslpv.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nencelslpv.o `test -f 'nencelslpv.F' || echo '$(srcdir)/'`nencelslpv.F

libNEUTneutcore_a-nencelslpv.obj: nencelslpv.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nencelslpv.obj `if test -f 'nencelslpv.F'; then $(CYGPATH_W) 'nencelslpv.F'; else $(CYGPATH_W) '$(srcdir)/nencelslpv.F'; fi`

libNEUTneutcore_a-rsdistg.o: rsdistg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdistg.o `test -f 'rsdistg.F' || echo '$(srcdir)/'`rsdistg.F

libNEUTneutcore_a-rsdistg.obj: rsdistg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdistg.obj `if test -f 'rsdistg.F'; then $(CYGPATH_W) 'rsdistg.F'; else $(CYGPATH_W) '$(srcdir)/rsdistg.F'; fi`

libNEUTneutcore_a-rstcrsg.o: rstcrsg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsg.o `test -f 'rstcrsg.F' || echo '$(srcdir)/'`rstcrsg.F

libNEUTneutcore_a-rstcrsg.obj: rstcrsg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsg.obj `if test -f 'rstcrsg.F'; then $(CYGPATH_W) 'rstcrsg.F'; else $(CYGPATH_W) '$(srcdir)/rstcrsg.F'; fi`

libNEUTneutcore_a-dnelsq2.o: dnelsq2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dnelsq2.o `test -f 'dnelsq2.F' || echo '$(srcdir)/'`dnelsq2.F

libNEUTneutcore_a-dnelsq2.obj: dnelsq2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dnelsq2.obj `if test -f 'dnelsq2.F'; then $(CYGPATH_W) 'dnelsq2.F'; else $(CYGPATH_W) '$(srcdir)/dnelsq2.F'; fi`

libNEUTneutcore_a-necard.o: necard.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necard.o `test -f 'necard.F' || echo '$(srcdir)/'`necard.F

libNEUTneutcore_a-necard.obj: necard.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necard.obj `if test -f 'necard.F'; then $(CYGPATH_W) 'necard.F'; else $(CYGPATH_W) '$(srcdir)/necard.F'; fi`

libNEUTneutcore_a-nencelsspff.o: nencelsspff.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nencelsspff.o `test -f 'nencelsspff.F' || echo '$(srcdir)/'`nencelsspff.F

libNEUTneutcore_a-nencelsspff.obj: nencelsspff.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nencelsspff.obj `if test -f 'nencelsspff.F'; then $(CYGPATH_W) 'nencelsspff.F'; else $(CYGPATH_W) '$(srcdir)/nencelsspff.F'; fi`

libNEUTneutcore_a-rsdistk.o: rsdistk.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdistk.o `test -f 'rsdistk.F' || echo '$(srcdir)/'`rsdistk.F

libNEUTneutcore_a-rsdistk.obj: rsdistk.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdistk.obj `if test -f 'rsdistk.F'; then $(CYGPATH_W) 'rsdistk.F'; else $(CYGPATH_W) '$(srcdir)/rsdistk.F'; fi`

libNEUTneutcore_a-rstcrsgm.o: rstcrsgm.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsgm.o `test -f 'rstcrsgm.F' || echo '$(srcdir)/'`rstcrsgm.F

libNEUTneutcore_a-rstcrsgm.obj: rstcrsgm.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsgm.obj `if test -f 'rstcrsgm.F'; then $(CYGPATH_W) 'rstcrsgm.F'; else $(CYGPATH_W) '$(srcdir)/rstcrsgm.F'; fi`

libNEUTneutcore_a-dnncela.o: dnncela.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dnncela.o `test -f 'dnncela.F' || echo '$(srcdir)/'`dnncela.F

libNEUTneutcore_a-dnncela.obj: dnncela.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dnncela.obj `if test -f 'dnncela.F'; then $(CYGPATH_W) 'dnncela.F'; else $(CYGPATH_W) '$(srcdir)/dnncela.F'; fi`

libNEUTneutcore_a-nechadir.o: nechadir.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nechadir.o `test -f 'nechadir.F' || echo '$(srcdir)/'`nechadir.F

libNEUTneutcore_a-nechadir.obj: nechadir.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nechadir.obj `if test -f 'nechadir.F'; then $(CYGPATH_W) 'nechadir.F'; else $(CYGPATH_W) '$(srcdir)/nechadir.F'; fi`

libNEUTneutcore_a-nencelsvcp.o: nencelsvcp.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nencelsvcp.o `test -f 'nencelsvcp.F' || echo '$(srcdir)/'`nencelsvcp.F

libNEUTneutcore_a-nencelsvcp.obj: nencelsvcp.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nencelsvcp.obj `if test -f 'nencelsvcp.F'; then $(CYGPATH_W) 'nencelsvcp.F'; else $(CYGPATH_W) '$(srcdir)/nencelsvcp.F'; fi`

libNEUTneutcore_a-rsdt33e.o: rsdt33e.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdt33e.o `test -f 'rsdt33e.F' || echo '$(srcdir)/'`rsdt33e.F

libNEUTneutcore_a-rsdt33e.obj: rsdt33e.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdt33e.obj `if test -f 'rsdt33e.F'; then $(CYGPATH_W) 'rsdt33e.F'; else $(CYGPATH_W) '$(srcdir)/rsdt33e.F'; fi`

libNEUTneutcore_a-rstcrsgt.o: rstcrsgt.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsgt.o `test -f 'rstcrsgt.F' || echo '$(srcdir)/'`rstcrsgt.F

libNEUTneutcore_a-rstcrsgt.obj: rstcrsgt.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsgt.obj `if test -f 'rstcrsgt.F'; then $(CYGPATH_W) 'rstcrsgt.F'; else $(CYGPATH_W) '$(srcdir)/rstcrsgt.F'; fi`

libNEUTneutcore_a-dnncelsq2.o: dnncelsq2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dnncelsq2.o `test -f 'dnncelsq2.F' || echo '$(srcdir)/'`dnncelsq2.F

libNEUTneutcore_a-dnncelsq2.obj: dnncelsq2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-dnncelsq2.obj `if test -f 'dnncelsq2.F'; then $(CYGPATH_W) 'dnncelsq2.F'; else $(CYGPATH_W) '$(srcdir)/dnncelsq2.F'; fi`

libNEUTneutcore_a-necharge.o: necharge.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necharge.o `test -f 'necharge.F' || echo '$(srcdir)/'`necharge.F

libNEUTneutcore_a-necharge.obj: necharge.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necharge.obj `if test -f 'necharge.F'; then $(CYGPATH_W) 'necharge.F'; else $(CYGPATH_W) '$(srcdir)/necharge.F'; fi`

libNEUTneutcore_a-rsdt33.o: rsdt33.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdt33.o `test -f 'rsdt33.F' || echo '$(srcdir)/'`rsdt33.F

libNEUTneutcore_a-rsdt33.obj: rsdt33.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdt33.obj `if test -f 'rsdt33.F'; then $(CYGPATH_W) 'rsdt33.F'; else $(CYGPATH_W) '$(srcdir)/rsdt33.F'; fi`

libNEUTneutcore_a-rstcrsk.o: rstcrsk.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsk.o `test -f 'rstcrsk.F' || echo '$(srcdir)/'`rstcrsk.F

libNEUTneutcore_a-rstcrsk.obj: rstcrsk.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsk.obj `if test -f 'rstcrsk.F'; then $(CYGPATH_W) 'rstcrsk.F'; else $(CYGPATH_W) '$(srcdir)/rstcrsk.F'; fi`

libNEUTneutcore_a-elaxff.o: elaxff.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-elaxff.o `test -f 'elaxff.F' || echo '$(srcdir)/'`elaxff.F

libNEUTneutcore_a-elaxff.obj: elaxff.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-elaxff.obj `if test -f 'elaxff.F'; then $(CYGPATH_W) 'elaxff.F'; else $(CYGPATH_W) '$(srcdir)/elaxff.F'; fi`

libNEUTneutcore_a-nechkfb.o: nechkfb.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nechkfb.o `test -f 'nechkfb.F' || echo '$(srcdir)/'`nechkfb.F

libNEUTneutcore_a-nechkfb.obj: nechkfb.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nechkfb.obj `if test -f 'nechkfb.F'; then $(CYGPATH_W) 'nechkfb.F'; else $(CYGPATH_W) '$(srcdir)/nechkfb.F'; fi`

libNEUTneutcore_a-nencelsvnp.o: nencelsvnp.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nencelsvnp.o `test -f 'nencelsvnp.F' || echo '$(srcdir)/'`nencelsvnp.F

libNEUTneutcore_a-nencelsvnp.obj: nencelsvnp.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nencelsvnp.obj `if test -f 'nencelsvnp.F'; then $(CYGPATH_W) 'nencelsvnp.F'; else $(CYGPATH_W) '$(srcdir)/nencelsvnp.F'; fi`

libNEUTneutcore_a-rsdt33g.o: rsdt33g.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdt33g.o `test -f 'rsdt33g.F' || echo '$(srcdir)/'`rsdt33g.F

libNEUTneutcore_a-rsdt33g.obj: rsdt33g.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdt33g.obj `if test -f 'rsdt33g.F'; then $(CYGPATH_W) 'rsdt33g.F'; else $(CYGPATH_W) '$(srcdir)/rsdt33g.F'; fi`

libNEUTneutcore_a-rstcrskm.o: rstcrskm.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrskm.o `test -f 'rstcrskm.F' || echo '$(srcdir)/'`rstcrskm.F

libNEUTneutcore_a-rstcrskm.obj: rstcrskm.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrskm.obj `if test -f 'rstcrskm.F'; then $(CYGPATH_W) 'rstcrskm.F'; else $(CYGPATH_W) '$(srcdir)/rstcrskm.F'; fi`

libNEUTneutcore_a-evdifcrs.o: evdifcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-evdifcrs.o `test -f 'evdifcrs.F' || echo '$(srcdir)/'`evdifcrs.F

libNEUTneutcore_a-evdifcrs.obj: evdifcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-evdifcrs.obj `if test -f 'evdifcrs.F'; then $(CYGPATH_W) 'evdifcrs.F'; else $(CYGPATH_W) '$(srcdir)/evdifcrs.F'; fi`

libNEUTneutcore_a-neclpos.o: neclpos.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neclpos.o `test -f 'neclpos.F' || echo '$(srcdir)/'`neclpos.F

libNEUTneutcore_a-neclpos.obj: neclpos.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neclpos.obj `if test -f 'neclpos.F'; then $(CYGPATH_W) 'neclpos.F'; else $(CYGPATH_W) '$(srcdir)/neclpos.F'; fi`

libNEUTneutcore_a-nencelsvnt.o: nencelsvnt.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nencelsvnt.o `test -f 'nencelsvnt.F' || echo '$(srcdir)/'`nencelsvnt.F

libNEUTneutcore_a-nencelsvnt.obj: nencelsvnt.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nencelsvnt.obj `if test -f 'nencelsvnt.F'; then $(CYGPATH_W) 'nencelsvnt.F'; else $(CYGPATH_W) '$(srcdir)/nencelsvnt.F'; fi`

libNEUTneutcore_a-rsdt33k.o: rsdt33k.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdt33k.o `test -f 'rsdt33k.F' || echo '$(srcdir)/'`rsdt33k.F

libNEUTneutcore_a-rsdt33k.obj: rsdt33k.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsdt33k.obj `if test -f 'rsdt33k.F'; then $(CYGPATH_W) 'rsdt33k.F'; else $(CYGPATH_W) '$(srcdir)/rsdt33k.F'; fi`

libNEUTneutcore_a-rstcrskrd.o: rstcrskrd.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrskrd.o `test -f 'rstcrskrd.F' || echo '$(srcdir)/'`rstcrskrd.F

libNEUTneutcore_a-rstcrskrd.obj: rstcrskrd.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrskrd.obj `if test -f 'rstcrskrd.F'; then $(CYGPATH_W) 'rstcrskrd.F'; else $(CYGPATH_W) '$(srcdir)/rstcrskrd.F'; fi`

libNEUTneutcore_a-fnapicrs.o: fnapicrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnapicrs.o `test -f 'fnapicrs.F' || echo '$(srcdir)/'`fnapicrs.F

libNEUTneutcore_a-fnapicrs.obj: fnapicrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnapicrs.obj `if test -f 'fnapicrs.F'; then $(CYGPATH_W) 'fnapicrs.F'; else $(CYGPATH_W) '$(srcdir)/fnapicrs.F'; fi`

libNEUTneutcore_a-neclrcrs.o: neclrcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neclrcrs.o `test -f 'neclrcrs.F' || echo '$(srcdir)/'`neclrcrs.F

libNEUTneutcore_a-neclrcrs.obj: neclrcrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neclrcrs.obj `if test -f 'neclrcrs.F'; then $(CYGPATH_W) 'neclrcrs.F'; else $(CYGPATH_W) '$(srcdir)/neclrcrs.F'; fi`

libNEUTneutcore_a-neomega.o: neomega.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neomega.o `test -f 'neomega.F' || echo '$(srcdir)/'`neomega.F

libNEUTneutcore_a-neomega.obj: neomega.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neomega.obj `if test -f 'neomega.F'; then $(CYGPATH_W) 'neomega.F'; else $(CYGPATH_W) '$(srcdir)/neomega.F'; fi`

libNEUTneutcore_a-rsifl1e.o: rsifl1e.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl1e.o `test -f 'rsifl1e.F' || echo '$(srcdir)/'`rsifl1e.F

libNEUTneutcore_a-rsifl1e.obj: rsifl1e.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl1e.obj `if test -f 'rsifl1e.F'; then $(CYGPATH_W) 'rsifl1e.F'; else $(CYGPATH_W) '$(srcdir)/rsifl1e.F'; fi`

libNEUTneutcore_a-rstcrskt.o: rstcrskt.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrskt.o `test -f 'rstcrskt.F' || echo '$(srcdir)/'`rstcrskt.F

libNEUTneutcore_a-rstcrskt.obj: rstcrskt.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrskt.obj `if test -f 'rstcrskt.F'; then $(CYGPATH_W) 'rstcrskt.F'; else $(CYGPATH_W) '$(srcdir)/rstcrskt.F'; fi`

libNEUTneutcore_a-fndsigmapidt.o: fndsigmapidt.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fndsigmapidt.o `test -f 'fndsigmapidt.F' || echo '$(srcdir)/'`fndsigmapidt.F

libNEUTneutcore_a-fndsigmapidt.obj: fndsigmapidt.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fndsigmapidt.obj `if test -f 'fndsigmapidt.F'; then $(CYGPATH_W) 'fndsigmapidt.F'; else $(CYGPATH_W) '$(srcdir)/fndsigmapidt.F'; fi`

libNEUTneutcore_a-neclrwrk.o: neclrwrk.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neclrwrk.o `test -f 'neclrwrk.F' || echo '$(srcdir)/'`neclrwrk.F

libNEUTneutcore_a-neclrwrk.obj: neclrwrk.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neclrwrk.obj `if test -f 'neclrwrk.F'; then $(CYGPATH_W) 'neclrwrk.F'; else $(CYGPATH_W) '$(srcdir)/neclrwrk.F'; fi`

libNEUTneutcore_a-neranbll2.o: neranbll2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neranbll2.o `test -f 'neranbll2.F' || echo '$(srcdir)/'`neranbll2.F

libNEUTneutcore_a-neranbll2.obj: neranbll2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neranbll2.obj `if test -f 'neranbll2.F'; then $(CYGPATH_W) 'neranbll2.F'; else $(CYGPATH_W) '$(srcdir)/neranbll2.F'; fi`

libNEUTneutcore_a-rsifl1.o: rsifl1.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl1.o `test -f 'rsifl1.F' || echo '$(srcdir)/'`rsifl1.F

libNEUTneutcore_a-rsifl1.obj: rsifl1.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl1.obj `if test -f 'rsifl1.F'; then $(CYGPATH_W) 'rsifl1.F'; else $(CYGPATH_W) '$(srcdir)/rsifl1.F'; fi`

libNEUTneutcore_a-rstcrsm.o: rstcrsm.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsm.o `test -f 'rstcrsm.F' || echo '$(srcdir)/'`rstcrsm.F

libNEUTneutcore_a-rstcrsm.obj: rstcrsm.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsm.obj `if test -f 'rstcrsm.F'; then $(CYGPATH_W) 'rstcrsm.F'; else $(CYGPATH_W) '$(srcdir)/rstcrsm.F'; fi`

libNEUTneutcore_a-fnelscrn.o: fnelscrn.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelscrn.o `test -f 'fnelscrn.F' || echo '$(srcdir)/'`fnelscrn.F

libNEUTneutcore_a-fnelscrn.obj: fnelscrn.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelscrn.obj `if test -f 'fnelscrn.F'; then $(CYGPATH_W) 'fnelscrn.F'; else $(CYGPATH_W) '$(srcdir)/fnelscrn.F'; fi`

libNEUTneutcore_a-necohvct.o: necohvct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necohvct.o `test -f 'necohvct.F' || echo '$(srcdir)/'`necohvct.F

libNEUTneutcore_a-necohvct.obj: necohvct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necohvct.obj `if test -f 'necohvct.F'; then $(CYGPATH_W) 'necohvct.F'; else $(CYGPATH_W) '$(srcdir)/necohvct.F'; fi`

libNEUTneutcore_a-neranbll.o: neranbll.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neranbll.o `test -f 'neranbll.F' || echo '$(srcdir)/'`neranbll.F

libNEUTneutcore_a-neranbll.obj: neranbll.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neranbll.obj `if test -f 'neranbll.F'; then $(CYGPATH_W) 'neranbll.F'; else $(CYGPATH_W) '$(srcdir)/neranbll.F'; fi`

libNEUTneutcore_a-rsifl1k.o: rsifl1k.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl1k.o `test -f 'rsifl1k.F' || echo '$(srcdir)/'`rsifl1k.F

libNEUTneutcore_a-rsifl1k.obj: rsifl1k.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl1k.obj `if test -f 'rsifl1k.F'; then $(CYGPATH_W) 'rsifl1k.F'; else $(CYGPATH_W) '$(srcdir)/rsifl1k.F'; fi`

libNEUTneutcore_a-rstcrsrd.o: rstcrsrd.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsrd.o `test -f 'rstcrsrd.F' || echo '$(srcdir)/'`rstcrsrd.F

libNEUTneutcore_a-rstcrsrd.obj: rstcrsrd.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrsrd.obj `if test -f 'rstcrsrd.F'; then $(CYGPATH_W) 'rstcrsrd.F'; else $(CYGPATH_W) '$(srcdir)/rstcrsrd.F'; fi`

libNEUTneutcore_a-fnelscrs.o: fnelscrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelscrs.o `test -f 'fnelscrs.F' || echo '$(srcdir)/'`fnelscrs.F

libNEUTneutcore_a-fnelscrs.obj: fnelscrs.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelscrs.obj `if test -f 'fnelscrs.F'; then $(CYGPATH_W) 'fnelscrs.F'; else $(CYGPATH_W) '$(srcdir)/fnelscrs.F'; fi`

libNEUTneutcore_a-necpnewk.o: necpnewk.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necpnewk.o `test -f 'necpnewk.F' || echo '$(srcdir)/'`necpnewk.F

libNEUTneutcore_a-necpnewk.obj: necpnewk.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necpnewk.obj `if test -f 'necpnewk.F'; then $(CYGPATH_W) 'necpnewk.F'; else $(CYGPATH_W) '$(srcdir)/necpnewk.F'; fi`

libNEUTneutcore_a-nerdseed.o: nerdseed.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nerdseed.o `test -f 'nerdseed.F' || echo '$(srcdir)/'`nerdseed.F

libNEUTneutcore_a-nerdseed.obj: nerdseed.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nerdseed.obj `if test -f 'nerdseed.F'; then $(CYGPATH_W) 'nerdseed.F'; else $(CYGPATH_W) '$(srcdir)/nerdseed.F'; fi`

libNEUTneutcore_a-rsifl2e.o: rsifl2e.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl2e.o `test -f 'rsifl2e.F' || echo '$(srcdir)/'`rsifl2e.F

libNEUTneutcore_a-rsifl2e.obj: rsifl2e.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl2e.obj `if test -f 'rsifl2e.F'; then $(CYGPATH_W) 'rsifl2e.F'; else $(CYGPATH_W) '$(srcdir)/rsifl2e.F'; fi`

libNEUTneutcore_a-rstcrst.o: rstcrst.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrst.o `test -f 'rstcrst.F' || echo '$(srcdir)/'`rstcrst.F

libNEUTneutcore_a-rstcrst.obj: rstcrst.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rstcrst.obj `if test -f 'rstcrst.F'; then $(CYGPATH_W) 'rstcrst.F'; else $(CYGPATH_W) '$(srcdir)/rstcrst.F'; fi`

libNEUTneutcore_a-fnels_erpascl.o: fnels_erpascl.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnels_erpascl.o `test -f 'fnels_erpascl.F' || echo '$(srcdir)/'`fnels_erpascl.F

libNEUTneutcore_a-fnels_erpascl.obj: fnels_erpascl.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnels_erpascl.obj `if test -f 'fnels_erpascl.F'; then $(CYGPATH_W) 'fnels_erpascl.F'; else $(CYGPATH_W) '$(srcdir)/fnels_erpascl.F'; fi`

libNEUTneutcore_a-necrosel.o: necrosel.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necrosel.o `test -f 'necrosel.F' || echo '$(srcdir)/'`necrosel.F

libNEUTneutcore_a-necrosel.obj: necrosel.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necrosel.obj `if test -f 'necrosel.F'; then $(CYGPATH_W) 'necrosel.F'; else $(CYGPATH_W) '$(srcdir)/necrosel.F'; fi`

libNEUTneutcore_a-nesetfgparams.o: nesetfgparams.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nesetfgparams.o `test -f 'nesetfgparams.F' || echo '$(srcdir)/'`nesetfgparams.F

libNEUTneutcore_a-nesetfgparams.obj: nesetfgparams.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nesetfgparams.obj `if test -f 'nesetfgparams.F'; then $(CYGPATH_W) 'nesetfgparams.F'; else $(CYGPATH_W) '$(srcdir)/nesetfgparams.F'; fi`

libNEUTneutcore_a-rsifl2.o: rsifl2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl2.o `test -f 'rsifl2.F' || echo '$(srcdir)/'`rsifl2.F

libNEUTneutcore_a-rsifl2.obj: rsifl2.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl2.obj `if test -f 'rsifl2.F'; then $(CYGPATH_W) 'rsifl2.F'; else $(CYGPATH_W) '$(srcdir)/rsifl2.F'; fi`

libNEUTneutcore_a-rs.wdist.o: rs.wdist.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rs.wdist.o `test -f 'rs.wdist.F' || echo '$(srcdir)/'`rs.wdist.F

libNEUTneutcore_a-rs.wdist.obj: rs.wdist.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rs.wdist.obj `if test -f 'rs.wdist.F'; then $(CYGPATH_W) 'rs.wdist.F'; else $(CYGPATH_W) '$(srcdir)/rs.wdist.F'; fi`

libNEUTneutcore_a-fnelsint.o: fnelsint.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelsint.o `test -f 'fnelsint.F' || echo '$(srcdir)/'`fnelsint.F

libNEUTneutcore_a-fnelsint.obj: fnelsint.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelsint.obj `if test -f 'fnelsint.F'; then $(CYGPATH_W) 'fnelsint.F'; else $(CYGPATH_W) '$(srcdir)/fnelsint.F'; fi`

libNEUTneutcore_a-necrosin.o: necrosin.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necrosin.o `test -f 'necrosin.F' || echo '$(srcdir)/'`necrosin.F

libNEUTneutcore_a-necrosin.obj: necrosin.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necrosin.obj `if test -f 'necrosin.F'; then $(CYGPATH_W) 'necrosin.F'; else $(CYGPATH_W) '$(srcdir)/necrosin.F'; fi`

libNEUTneutcore_a-nesettarg.o: nesettarg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nesettarg.o `test -f 'nesettarg.F' || echo '$(srcdir)/'`nesettarg.F

libNEUTneutcore_a-nesettarg.obj: nesettarg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nesettarg.obj `if test -f 'nesettarg.F'; then $(CYGPATH_W) 'nesettarg.F'; else $(CYGPATH_W) '$(srcdir)/nesettarg.F'; fi`

libNEUTneutcore_a-rsifl2g.o: rsifl2g.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl2g.o `test -f 'rsifl2g.F' || echo '$(srcdir)/'`rsifl2g.F

libNEUTneutcore_a-rsifl2g.obj: rsifl2g.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl2g.obj `if test -f 'rsifl2g.F'; then $(CYGPATH_W) 'rsifl2g.F'; else $(CYGPATH_W) '$(srcdir)/rsifl2g.F'; fi`

libNEUTneutcore_a-rsy00.o: rsy00.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsy00.o `test -f 'rsy00.F' || echo '$(srcdir)/'`rsy00.F

libNEUTneutcore_a-rsy00.obj: rsy00.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsy00.obj `if test -f 'rsy00.F'; then $(CYGPATH_W) 'rsy00.F'; else $(CYGPATH_W) '$(srcdir)/rsy00.F'; fi`

libNEUTneutcore_a-fnelspan_effsf.o: fnelspan_effsf.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspan_effsf.o `test -f 'fnelspan_effsf.F' || echo '$(srcdir)/'`fnelspan_effsf.F

libNEUTneutcore_a-fnelspan_effsf.obj: fnelspan_effsf.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspan_effsf.obj `if test -f 'fnelspan_effsf.F'; then $(CYGPATH_W) 'fnelspan_effsf.F'; else $(CYGPATH_W) '$(srcdir)/fnelspan_effsf.F'; fi`

libNEUTneutcore_a-necrosto.o: necrosto.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necrosto.o `test -f 'necrosto.F' || echo '$(srcdir)/'`necrosto.F

libNEUTneutcore_a-necrosto.obj: necrosto.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necrosto.obj `if test -f 'necrosto.F'; then $(CYGPATH_W) 'necrosto.F'; else $(CYGPATH_W) '$(srcdir)/necrosto.F'; fi`

libNEUTneutcore_a-nesortdl.o: nesortdl.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nesortdl.o `test -f 'nesortdl.F' || echo '$(srcdir)/'`nesortdl.F

libNEUTneutcore_a-nesortdl.obj: nesortdl.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nesortdl.obj `if test -f 'nesortdl.F'; then $(CYGPATH_W) 'nesortdl.F'; else $(CYGPATH_W) '$(srcdir)/nesortdl.F'; fi`

libNEUTneutcore_a-rsifl2k.o: rsifl2k.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl2k.o `test -f 'rsifl2k.F' || echo '$(srcdir)/'`rsifl2k.F

libNEUTneutcore_a-rsifl2k.obj: rsifl2k.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl2k.obj `if test -f 'rsifl2k.F'; then $(CYGPATH_W) 'rsifl2k.F'; else $(CYGPATH_W) '$(srcdir)/rsifl2k.F'; fi`

libNEUTneutcore_a-rsy20.o: rsy20.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsy20.o `test -f 'rsy20.F' || echo '$(srcdir)/'`rsy20.F

libNEUTneutcore_a-rsy20.obj: rsy20.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsy20.obj `if test -f 'rsy20.F'; then $(CYGPATH_W) 'rsy20.F'; else $(CYGPATH_W) '$(srcdir)/rsy20.F'; fi`

libNEUTneutcore_a-fnelspan.o: fnelspan.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspan.o `test -f 'fnelspan.F' || echo '$(srcdir)/'`fnelspan.F

libNEUTneutcore_a-fnelspan.obj: fnelspan.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspan.obj `if test -f 'fnelspan.F'; then $(CYGPATH_W) 'fnelspan.F'; else $(CYGPATH_W) '$(srcdir)/fnelspan.F'; fi`

libNEUTneutcore_a-necrsmode.o: necrsmode.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necrsmode.o `test -f 'necrsmode.F' || echo '$(srcdir)/'`necrsmode.F

libNEUTneutcore_a-necrsmode.obj: necrsmode.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-necrsmode.obj `if test -f 'necrsmode.F'; then $(CYGPATH_W) 'necrsmode.F'; else $(CYGPATH_W) '$(srcdir)/necrsmode.F'; fi`

libNEUTneutcore_a-nevect.o: nevect.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nevect.o `test -f 'nevect.F' || echo '$(srcdir)/'`nevect.F

libNEUTneutcore_a-nevect.obj: nevect.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nevect.obj `if test -f 'nevect.F'; then $(CYGPATH_W) 'nevect.F'; else $(CYGPATH_W) '$(srcdir)/nevect.F'; fi`

libNEUTneutcore_a-rsifl3e.o: rsifl3e.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl3e.o `test -f 'rsifl3e.F' || echo '$(srcdir)/'`rsifl3e.F

libNEUTneutcore_a-rsifl3e.obj: rsifl3e.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl3e.obj `if test -f 'rsifl3e.F'; then $(CYGPATH_W) 'rsifl3e.F'; else $(CYGPATH_W) '$(srcdir)/rsifl3e.F'; fi`

libNEUTneutcore_a-rsy21.o: rsy21.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsy21.o `test -f 'rsy21.F' || echo '$(srcdir)/'`rsy21.F

libNEUTneutcore_a-rsy21.obj: rsy21.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsy21.obj `if test -f 'rsy21.F'; then $(CYGPATH_W) 'rsy21.F'; else $(CYGPATH_W) '$(srcdir)/rsy21.F'; fi`

libNEUTneutcore_a-fnelspan_intpol.o: fnelspan_intpol.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspan_intpol.o `test -f 'fnelspan_intpol.F' || echo '$(srcdir)/'`fnelspan_intpol.F

libNEUTneutcore_a-fnelspan_intpol.obj: fnelspan_intpol.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspan_intpol.obj `if test -f 'fnelspan_intpol.F'; then $(CYGPATH_W) 'fnelspan_intpol.F'; else $(CYGPATH_W) '$(srcdir)/fnelspan_intpol.F'; fi`

libNEUTneutcore_a-nedcy2bd.o: nedcy2bd.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nedcy2bd.o `test -f 'nedcy2bd.F' || echo '$(srcdir)/'`nedcy2bd.F

libNEUTneutcore_a-nedcy2bd.obj: nedcy2bd.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nedcy2bd.obj `if test -f 'nedcy2bd.F'; then $(CYGPATH_W) 'nedcy2bd.F'; else $(CYGPATH_W) '$(srcdir)/nedcy2bd.F'; fi`

libNEUTneutcore_a-nevent.o: nevent.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nevent.o `test -f 'nevent.F' || echo '$(srcdir)/'`nevent.F

libNEUTneutcore_a-nevent.obj: nevent.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nevent.obj `if test -f 'nevent.F'; then $(CYGPATH_W) 'nevent.F'; else $(CYGPATH_W) '$(srcdir)/nevent.F'; fi`

libNEUTneutcore_a-rsifl3.o: rsifl3.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl3.o `test -f 'rsifl3.F' || echo '$(srcdir)/'`rsifl3.F

libNEUTneutcore_a-rsifl3.obj: rsifl3.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl3.obj `if test -f 'rsifl3.F'; then $(CYGPATH_W) 'rsifl3.F'; else $(CYGPATH_W) '$(srcdir)/rsifl3.F'; fi`

libNEUTneutcore_a-rsy22.o: rsy22.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsy22.o `test -f 'rsy22.F' || echo '$(srcdir)/'`rsy22.F

libNEUTneutcore_a-rsy22.obj: rsy22.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsy22.obj `if test -f 'rsy22.F'; then $(CYGPATH_W) 'rsy22.F'; else $(CYGPATH_W) '$(srcdir)/rsy22.F'; fi`

libNEUTneutcore_a-fnelspan_sf.o: fnelspan_sf.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspan_sf.o `test -f 'fnelspan_sf.F' || echo '$(srcdir)/'`fnelspan_sf.F

libNEUTneutcore_a-fnelspan_sf.obj: fnelspan_sf.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspan_sf.obj `if test -f 'fnelspan_sf.F'; then $(CYGPATH_W) 'fnelspan_sf.F'; else $(CYGPATH_W) '$(srcdir)/fnelspan_sf.F'; fi`

libNEUTneutcore_a-nedifvct.o: nedifvct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nedifvct.o `test -f 'nedifvct.F' || echo '$(srcdir)/'`nedifvct.F

libNEUTneutcore_a-nedifvct.obj: nedifvct.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nedifvct.obj `if test -f 'nedifvct.F'; then $(CYGPATH_W) 'nedifvct.F'; else $(CYGPATH_W) '$(srcdir)/nedifvct.F'; fi`

libNEUTneutcore_a-nrsettarg.o: nrsettarg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nrsettarg.o `test -f 'nrsettarg.F' || echo '$(srcdir)/'`nrsettarg.F

libNEUTneutcore_a-nrsettarg.obj: nrsettarg.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nrsettarg.obj `if test -f 'nrsettarg.F'; then $(CYGPATH_W) 'nrsettarg.F'; else $(CYGPATH_W) '$(srcdir)/nrsettarg.F'; fi`

libNEUTneutcore_a-rsifl3k.o: rsifl3k.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl3k.o `test -f 'rsifl3k.F' || echo '$(srcdir)/'`rsifl3k.F

libNEUTneutcore_a-rsifl3k.obj: rsifl3k.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl3k.obj `if test -f 'rsifl3k.F'; then $(CYGPATH_W) 'rsifl3k.F'; else $(CYGPATH_W) '$(srcdir)/rsifl3k.F'; fi`

libNEUTneutcore_a-structm.o: structm.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-structm.o `test -f 'structm.F' || echo '$(srcdir)/'`structm.F

libNEUTneutcore_a-structm.obj: structm.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-structm.obj `if test -f 'structm.F'; then $(CYGPATH_W) 'structm.F'; else $(CYGPATH_W) '$(srcdir)/structm.F'; fi`

libNEUTneutcore_a-fnelspau_effsf.o: fnelspau_effsf.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspau_effsf.o `test -f 'fnelspau_effsf.F' || echo '$(srcdir)/'`fnelspau_effsf.F

libNEUTneutcore_a-fnelspau_effsf.obj: fnelspau_effsf.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspau_effsf.obj `if test -f 'fnelspau_effsf.F'; then $(CYGPATH_W) 'fnelspau_effsf.F'; else $(CYGPATH_W) '$(srcdir)/fnelspau_effsf.F'; fi`

libNEUTneutcore_a-neelslpv.o: neelslpv.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelslpv.o `test -f 'neelslpv.F' || echo '$(srcdir)/'`neelslpv.F

libNEUTneutcore_a-neelslpv.obj: neelslpv.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelslpv.obj `if test -f 'neelslpv.F'; then $(CYGPATH_W) 'neelslpv.F'; else $(CYGPATH_W) '$(srcdir)/neelslpv.F'; fi`

libNEUTneutcore_a-nudeex.o: nudeex.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nudeex.o `test -f 'nudeex.F' || echo '$(srcdir)/'`nudeex.F

libNEUTneutcore_a-nudeex.obj: nudeex.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nudeex.obj `if test -f 'nudeex.F'; then $(CYGPATH_W) 'nudeex.F'; else $(CYGPATH_W) '$(srcdir)/nudeex.F'; fi`

libNEUTneutcore_a-rsifl4.o: rsifl4.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl4.o `test -f 'rsifl4.F' || echo '$(srcdir)/'`rsifl4.F

libNEUTneutcore_a-rsifl4.obj: rsifl4.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl4.obj `if test -f 'rsifl4.F'; then $(CYGPATH_W) 'rsifl4.F'; else $(CYGPATH_W) '$(srcdir)/rsifl4.F'; fi`

libNEUTneutcore_a-neelslvc.o: neelslvc.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelslvc.o `test -f 'neelslvc.F' || echo '$(srcdir)/'`neelslvc.F

libNEUTneutcore_a-neelslvc.obj: neelslvc.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelslvc.obj `if test -f 'neelslvc.F'; then $(CYGPATH_W) 'neelslvc.F'; else $(CYGPATH_W) '$(srcdir)/neelslvc.F'; fi`

libNEUTneutcore_a-nudeex_n.o: nudeex_n.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nudeex_n.o `test -f 'nudeex_n.F' || echo '$(srcdir)/'`nudeex_n.F

libNEUTneutcore_a-nudeex_n.obj: nudeex_n.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nudeex_n.obj `if test -f 'nudeex_n.F'; then $(CYGPATH_W) 'nudeex_n.F'; else $(CYGPATH_W) '$(srcdir)/nudeex_n.F'; fi`

libNEUTneutcore_a-rsifl4g.o: rsifl4g.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl4g.o `test -f 'rsifl4g.F' || echo '$(srcdir)/'`rsifl4g.F

libNEUTneutcore_a-rsifl4g.obj: rsifl4g.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl4g.obj `if test -f 'rsifl4g.F'; then $(CYGPATH_W) 'rsifl4g.F'; else $(CYGPATH_W) '$(srcdir)/rsifl4g.F'; fi`

libNEUTneutcore_a-fnelspau_intpol.o: fnelspau_intpol.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspau_intpol.o `test -f 'fnelspau_intpol.F' || echo '$(srcdir)/'`fnelspau_intpol.F

libNEUTneutcore_a-fnelspau_intpol.obj: fnelspau_intpol.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspau_intpol.obj `if test -f 'fnelspau_intpol.F'; then $(CYGPATH_W) 'fnelspau_intpol.F'; else $(CYGPATH_W) '$(srcdir)/fnelspau_intpol.F'; fi`

libNEUTneutcore_a-neelsspf.o: neelsspf.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelsspf.o `test -f 'neelsspf.F' || echo '$(srcdir)/'`neelsspf.F

libNEUTneutcore_a-neelsspf.obj: neelsspf.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelsspf.obj `if test -f 'neelsspf.F'; then $(CYGPATH_W) 'neelsspf.F'; else $(CYGPATH_W) '$(srcdir)/neelsspf.F'; fi`

libNEUTneutcore_a-nudeex_org.o: nudeex_org.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nudeex_org.o `test -f 'nudeex_org.F' || echo '$(srcdir)/'`nudeex_org.F

libNEUTneutcore_a-nudeex_org.obj: nudeex_org.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nudeex_org.obj `if test -f 'nudeex_org.F'; then $(CYGPATH_W) 'nudeex_org.F'; else $(CYGPATH_W) '$(srcdir)/nudeex_org.F'; fi`

libNEUTneutcore_a-rsifl5.o: rsifl5.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl5.o `test -f 'rsifl5.F' || echo '$(srcdir)/'`rsifl5.F

libNEUTneutcore_a-rsifl5.obj: rsifl5.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl5.obj `if test -f 'rsifl5.F'; then $(CYGPATH_W) 'rsifl5.F'; else $(CYGPATH_W) '$(srcdir)/rsifl5.F'; fi`

libNEUTneutcore_a-fnelspau_select.o: fnelspau_select.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspau_select.o `test -f 'fnelspau_select.F' || echo '$(srcdir)/'`fnelspau_select.F

libNEUTneutcore_a-fnelspau_select.obj: fnelspau_select.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-fnelspau_select.obj `if test -f 'fnelspau_select.F'; then $(CYGPATH_W) 'fnelspau_select.F'; else $(CYGPATH_W) '$(srcdir)/fnelspau_select.F'; fi`

libNEUTneutcore_a-neelsspff.o: neelsspff.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelsspff.o `test -f 'neelsspff.F' || echo '$(srcdir)/'`neelsspff.F

libNEUTneutcore_a-neelsspff.obj: neelsspff.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-neelsspff.obj `if test -f 'neelsspff.F'; then $(CYGPATH_W) 'neelsspff.F'; else $(CYGPATH_W) '$(srcdir)/neelsspff.F'; fi`

libNEUTneutcore_a-nudeex_p.o: nudeex_p.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nudeex_p.o `test -f 'nudeex_p.F' || echo '$(srcdir)/'`nudeex_p.F

libNEUTneutcore_a-nudeex_p.obj: nudeex_p.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-nudeex_p.obj `if test -f 'nudeex_p.F'; then $(CYGPATH_W) 'nudeex_p.F'; else $(CYGPATH_W) '$(srcdir)/nudeex_p.F'; fi`

libNEUTneutcore_a-rsifl6.o: rsifl6.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl6.o `test -f 'rsifl6.F' || echo '$(srcdir)/'`rsifl6.F

libNEUTneutcore_a-rsifl6.obj: rsifl6.F
	$(AM_V_PPF77)$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-rsifl6.obj `if test -f 'rsifl6.F'; then $(CYGPATH_W) 'rsifl6.F'; else $(CYGPATH_W) '$(srcdir)/rsifl6.F'; fi`
.F.f:
	$(F77COMPILE) -F $<

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

libNEUTneutcore_a-bbba07.o: bbba07.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_CXXFLAGS) $(CXXFLAGS) -MT libNEUTneutcore_a-bbba07.o -MD -MP -MF $(DEPDIR)/libNEUTneutcore_a-bbba07.Tpo -c -o libNEUTneutcore_a-bbba07.o `test -f 'bbba07.cc' || echo '$(srcdir)/'`bbba07.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNEUTneutcore_a-bbba07.Tpo $(DEPDIR)/libNEUTneutcore_a-bbba07.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bbba07.cc' object='libNEUTneutcore_a-bbba07.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_CXXFLAGS) $(CXXFLAGS) -c -o libNEUTneutcore_a-bbba07.o `test -f 'bbba07.cc' || echo '$(srcdir)/'`bbba07.cc

libNEUTneutcore_a-bbba07.obj: bbba07.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_CXXFLAGS) $(CXXFLAGS) -MT libNEUTneutcore_a-bbba07.obj -MD -MP -MF $(DEPDIR)/libNEUTneutcore_a-bbba07.Tpo -c -o libNEUTneutcore_a-bbba07.obj `if test -f 'bbba07.cc'; then $(CYGPATH_W) 'bbba07.cc'; else $(CYGPATH_W) '$(srcdir)/bbba07.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNEUTneutcore_a-bbba07.Tpo $(DEPDIR)/libNEUTneutcore_a-bbba07.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bbba07.cc' object='libNEUTneutcore_a-bbba07.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_CXXFLAGS) $(CXXFLAGS) -c -o libNEUTneutcore_a-bbba07.obj `if test -f 'bbba07.cc'; then $(CYGPATH_W) 'bbba07.cc'; else $(CYGPATH_W) '$(srcdir)/bbba07.cc'; fi`

libNEUTneutcore_a-fa3comp.o: fa3comp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_CXXFLAGS) $(CXXFLAGS) -MT libNEUTneutcore_a-fa3comp.o -MD -MP -MF $(DEPDIR)/libNEUTneutcore_a-fa3comp.Tpo -c -o libNEUTneutcore_a-fa3comp.o `test -f 'fa3comp.cc' || echo '$(srcdir)/'`fa3comp.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNEUTneutcore_a-fa3comp.Tpo $(DEPDIR)/libNEUTneutcore_a-fa3comp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fa3comp.cc' object='libNEUTneutcore_a-fa3comp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_CXXFLAGS) $(CXXFLAGS) -c -o libNEUTneutcore_a-fa3comp.o `test -f 'fa3comp.cc' || echo '$(srcdir)/'`fa3comp.cc

libNEUTneutcore_a-fa3comp.obj: fa3comp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_CXXFLAGS) $(CXXFLAGS) -MT libNEUTneutcore_a-fa3comp.obj -MD -MP -MF $(DEPDIR)/libNEUTneutcore_a-fa3comp.Tpo -c -o libNEUTneutcore_a-fa3comp.obj `if test -f 'fa3comp.cc'; then $(CYGPATH_W) 'fa3comp.cc'; else $(CYGPATH_W) '$(srcdir)/fa3comp.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNEUTneutcore_a-fa3comp.Tpo $(DEPDIR)/libNEUTneutcore_a-fa3comp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fa3comp.cc' object='libNEUTneutcore_a-fa3comp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_CXXFLAGS) $(CXXFLAGS) -c -o libNEUTneutcore_a-fa3comp.obj `if test -f 'fa3comp.cc'; then $(CYGPATH_W) 'fa3comp.cc'; else $(CYGPATH_W) '$(srcdir)/fa3comp.cc'; fi`

libNEUTneutcore_a-fazexp.o: fazexp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_CXXFLAGS) $(CXXFLAGS) -MT libNEUTneutcore_a-fazexp.o -MD -MP -MF $(DEPDIR)/libNEUTneutcore_a-fazexp.Tpo -c -o libNEUTneutcore_a-fazexp.o `test -f 'fazexp.cc' || echo '$(srcdir)/'`fazexp.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNEUTneutcore_a-fazexp.Tpo $(DEPDIR)/libNEUTneutcore_a-fazexp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fazexp.cc' object='libNEUTneutcore_a-fazexp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_CXXFLAGS) $(CXXFLAGS) -c -o libNEUTneutcore_a-fazexp.o `test -f 'fazexp.cc' || echo '$(srcdir)/'`fazexp.cc

libNEUTneutcore_a-fazexp.obj: fazexp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_CXXFLAGS) $(CXXFLAGS) -MT libNEUTneutcore_a-fazexp.obj -MD -MP -MF $(DEPDIR)/libNEUTneutcore_a-fazexp.Tpo -c -o libNEUTneutcore_a-fazexp.obj `if test -f 'fazexp.cc'; then $(CYGPATH_W) 'fazexp.cc'; else $(CYGPATH_W) '$(srcdir)/fazexp.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libNEUTneutcore_a-fazexp.Tpo $(DEPDIR)/libNEUTneutcore_a-fazexp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='fazexp.cc' object='libNEUTneutcore_a-fazexp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libNEUTneutcore_a_CXXFLAGS) $(CXXFLAGS) -c -o libNEUTneutcore_a-fazexp.obj `if test -f 'fazexp.cc'; then $(CYGPATH_W) 'fazexp.cc'; else $(CYGPATH_W) '$(srcdir)/fazexp.cc'; fi`

.f.o:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.lo:
	$(AM_V_F77)$(LTF77COMPILE) -c -o $@ $<

libNEUTneutcore_a-structg.o: structg.f
	$(AM_V_F77)$(F77) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-structg.o `test -f 'structg.f' || echo '$(srcdir)/'`structg.f

libNEUTneutcore_a-structg.obj: structg.f
	$(AM_V_F77)$(F77) $(libNEUTneutcore_a_FFLAGS) $(FFLAGS) -c -o libNEUTneutcore_a-structg.obj `if test -f 'structg.f'; then $(CYGPATH_W) 'structg.f'; else $(CYGPATH_W) '$(srcdir)/structg.f'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLIBRARIES

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
