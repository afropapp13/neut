LIBBASE	= neutcore
VER	= 5.3.3
TAG	=
COREVER = 533

#ifdef ICHI_KILO
	TAG = .kt
#endif

LIBALIAS = $(LIBBASE)$(TAG)
LIBNAME = $(LIBALIAS)_$(VER)

FORTRANDEFINES += -DNECOREVER=$(COREVER)

XCOMM ------------------------------------------------------
XCOMM Define Object Files
XCOMM ------------------------------------------------------

OBJ =	dnela.o fnelscrn.o fnelscrs.o dnelsq2.o fnq2max.o  \
		fnq2min.o fnncq2max.o fnncq2min.o neelsvct.o rnelq2.o rnrot.o \
		rnazi.o neelsspf.o dnels.o fnelspf.o neelsvcp.o fvfrmgev.o \
		neelslvc.o nechadir.o fnnpot.o fnelsint.o fnelspau_select.o \
                nemecvcp.o nemeclpv.o fnmec_select.o fnmec_nieves.o nemechad.o \
                fnelspan_intpol.o neranbll2.o fnels_rpascl.o fnels_erpascl.o\
                fnelspau_sf.o fnelspan_sf.o fnelspau_intpol.o fntotpau.o \
		bbba05.o LH.o fourVector.o\
		fnncelscrs.o dnncela.o dnncelsq2.o \
		nencelsvnt.o rnncelq2.o dnncelsq2.o \
		nencelsvnp.o nencelslpv.o nencelsspff.o \
		neelsvnp.o neelsvnt.o neclrwrk.o nevect.o nevent.o nemodsel.o \
		fnelspan.o neapivct.o fnapicrs.o rnw.o rnw13.o rnw1320.o rnxy.o \
		dndxdy.o fnf2.o fnxf3.o nedcy2bd.o nekindpa.o necharge.o \
		rnmass.o nemultip.o fnpkno.o fngamfct.o nechkfb.o neffect.o \
		necpnewk.o rsdt33.o nejet.o structg.o qgdisg.o \
		neelslpv.o neelsspff.o dnelsnl.o neomega.o \
		nefrmmom.o nemknpos.o neclpos.o neclrcrs.o \
		fnrworld.o \
		grv94di.o grv98_lo.o pdfset.o structm.o \
		nesettarg.o nrsettarg.o nesetfgparams.o \
        bbba07.o ddifcrs.o evdifcrs.o qedifcrs.o cohma.o necrsmode.o \
	fa3comp.o fazexp.o

RSO =	rs3drt.o rsasum.o rsdcrs.o rsclfm.o  rsdist.o rsifl1.o rsifl2.o \
		rsifl3.o rsifl4.o rsifl5.o rsifl6.o rsifl7.o rslzbt.o rsrotvec.o \
		rsspicrs.o rsspivct.o rstcrs.o rstcrsm.o rstcrst.o \
	    rsy00.o rsy20.o rsy21.o rsy22.o \
	    rsclfme.o rsclfmk.o rsdcrse.o rsdcrsk.o rsdiste.o rsdistk.o rsdt33e.o \
	    rsdt33k.o rsifl1e.o rsifl1k.o rsifl2e.o rsifl2k.o rsifl3e.o rsifl3k.o \
	    rslzbte.o rslzbtk.o rssetcrs.o rssetvct.o rsskcrs.o rsskvct.o \
		rstcrset.o rstcrsetm.o rstcrsett.o rstcrsk.o rstcrskm.o rstcrskt.o \
		rspauli.o \
		rsasumg.o  rsclfmg.o  rsdcrsg.o  rsdistg.o  rsdt33g.o \
		rsifl2g.o  rsifl4g.o  rsifl6g.o  rslzbtg.o  rstcrsg.o \
		rssgvct.o  rssgcrs.o  rstcrsgm.o rstcrsgt.o \
		rstcrsetrd.o  rstcrsgamrd.o  rstcrskrd.o  rstcrsrd.o

NEO =	necard.o necohvct.o cohcrsne.o cohcrsnerein.o cohcrsnekart.o \
		dcohnerein.o dcohnekart.o dcohmxnerein.o dcohmxnekart.o \
		cohkartlamda.o cohkarttmin.o cohkartwmax.o cohkartq2min.o \
		fndsigmapidt.o \
		negetr.o necrosin.o necrosto.o \
		nemkgam.o nemodgam.o negamnuc.o \
		nesortdl.o nek0.o nudeex.o nudeex_p.o nudeex_n.o \
		negenseed.o nerdseed.o neranbll.o nefillmodel.o nelibver.o \
		nefillver.o lenstr.o

OBJS = $(OBJ) $(RSO) $(NEO) 


#ifdef UPMU_RCK
FORTRANDEFINES += -DUPMU_RCK -DUPMU
#endif


XCOMM ------------------------------------------------------
XCOMM Build Library
XCOMM ------------------------------------------------------

NormalLibraryTarget($(LIBNAME),$(OBJS))
InstallLibrary($(LIBNAME),$(LIBDIR))
InstallLibraryAlias($(LIBNAME),$(LIBALIAS),$(LIBDIR))


XCOMM ------------------------------------------------------
XCOMM Install any include directories
XCOMM ------------------------------------------------------

InstallInclude(rscons.h,$(FORTRAN_INCDIR))
Fh2hIncludeTarget(rscons)
InstallInclude(rsconsC.h,$(INCDIR))

InstallInclude(mcgenpar.h,$(FORTRAN_INCDIR))
Fh2hIncludeTarget(mcgenpar)
InstallInclude(mcgenparC.h,$(INCDIR))

InstallInclude(posinnuc.h,$(FORTRAN_INCDIR))
Fh2hIncludeTarget(posinnuc)
InstallInclude(posinnucC.h,$(INCDIR))

InstallInclude(neutparams.h,$(FORTRAN_INCDIR))
Fh2hIncludeTarget(neutparams)
InstallInclude(neutparamsC.h,$(INCDIR))

InstallInclude(nrnuclparam.h,$(FORTRAN_INCDIR))
Fh2hIncludeTarget(nrnuclparam)
InstallInclude(nrnuclparamC.h,$(INCDIR))

InstallInclude(neutmodel.h,$(FORTRAN_INCDIR))
Fh2hIncludeTarget(neutmodel)
InstallInclude(neutmodelC.h,$(INCDIR))

InstallInclude(necard.h,$(FORTRAN_INCDIR))
Fh2hIncludeTarget(necard)
InstallInclude(necardC.h,$(INCDIR))

InstallInclude(nework.h,$(FORTRAN_INCDIR))
Fh2hIncludeTarget(nework)
InstallInclude(neworkC.h,$(INCDIR))

InstallInclude(neutcrs.h,$(FORTRAN_INCDIR))
Fh2hIncludeTarget(neutcrs)
InstallInclude(neutcrsC.h,$(INCDIR))

InstallInclude(nefillver.h,$(FORTRAN_INCDIR))
Fh2hIncludeTarget(nefillver)
InstallInclude(nefillverC.h,$(INCDIR))

InstallInclude(neutmodesCPP.h,$(INCDIR))

InstallInclude(neutfilepath.h,$(FORTRAN_INCDIR))
Fh2hIncludeTarget(neutfilepath)
InstallInclude(neutfilepathC.h,$(INCDIR))

XCOMM ------------------------------------------------------
XCOMM Make programs.
XCOMM ------------------------------------------------------

XCOMM   Program to calculate cross-section of quasi-elastic scattering
FortranProgramTarget(calcqecrs,calcqecrs.o,lib$(LIBNAME).a, \
        $(MCLIB) $(IOLIB) `cernlib jetset74 photos mathlib packlib kernlib`,)
InstallProgram(calcqecrs,$(BINDIR))
