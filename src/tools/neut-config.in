#!/bin/bash

#From https://stackoverflow.com/questions/59895/how-can-i-get-the-source-directory-of-a-bash-script-from-within-the-script-itsel
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  INSTALL_ROOT="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$INSTALL_ROOT/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
INSTALL_ROOT="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

SCRIPTNAME=$0

if [ ${#} -eq 0 ]; then
  echo "${SCRIPTNAME} [--features] [--has-feature <feature name>] [--incdir] [--libdir] [--libs] [--iolibs] [--rwlibs] [--libflags] [--iolibflags] [--rwlibflags] [--rootflags] [--cernflags]"
fi

while [[ ${#} -gt 0 ]]; do

  key="$1"
  case $key in

      --incdir)
      echo "${INSTALL_ROOT}/include"
      ;;

      --libdir)
      echo "${INSTALL_ROOT}/lib"
      ;;

      --libs)
      echo "__LIB_LIST__"
      ;;

      --iolibs)
      echo "__IO_LIB_LIST__"
      ;;

      --rwlibs)
      echo "__RW_LIB__ __IO_LIB_LIST__ __LIB_LIST__"
      ;;

      --libflags)
      echo "__LIB_FLAGS__"
      ;;

      --iolibflags)
      echo "__IO_LIB_FLAGS__"
      ;;

      --rwlibflags)
      echo "__RW_FLAGS__ __IO_LIB_FLAGS__ __LIB_FLAGS__"
      ;;

      --rootflags)
      echo "__ROOT_FLAGS__"
      ;;

      --cernflags)
      echo "__CERN_FLAGS__"
      ;;

      --features)
      echo "__FEATURES__"
      ;;

      --has-feature)
      shift
      TEST_FEATURE=$1
        if [[ "__FEATURES__" =~ (^|[[:space:]])${TEST_FEATURE}($|[[:space:]]) ]]; then
          exit 0
        else 
          exit 1
        fi
      ;;

      --version)
      echo "__NEUT_VERSION__"
      ;;

      -?|--help)

      echo "[RUNLIKE] ${SCRIPTNAME}"
      echo -e "\t--incdir                   : Print location of installed header files."
      echo -e "\t--libdir                   : Print location of installed libraries."
      echo -e "\t--libs                     : Print list of NEUT generation library names."
      echo -e "\t--iolibs                   : Print list of NEUT vector ROOT i/o library names."
      echo -e "\t--rwlibs                   : Print list of NEUT reweight library names."
      echo -e "\t--libflags                 : Print list of NEUT generation library linker flags."
      echo -e "\t--iolibflags               : Print list of NEUT vector ROOT i/o library inker flags."
      echo -e "\t--rwlibflags               : Print list of NEUT reweight library linker flags."
      echo -e "\t--rootflags                : Print compiler flags used when compiling against ROOT"
      echo -e "\t--cernflags                : Print compiler flags used when compiling against CERNLIB."
      echo -e "\t--features                 : Print list of features."
      echo -e "\t--has-feature <feature>    : Returns 0 if has feature, 1 if not."
      echo -e "\t--version                  : Print NEUT version."
      echo -e "\t-?|--help                  : Print this message."
      exit 0
      ;;

      *)
              # unknown option
      echo "Unknown option $1"
      exit 1
      ;;
  esac
  shift # past argument or value
done
