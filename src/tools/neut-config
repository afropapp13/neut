#!/bin/bash

#From https://stackoverflow.com/questions/59895/how-can-i-get-the-source-directory-of-a-bash-script-from-within-the-script-itsel
SOURCE="${BASH_SOURCE[0]%/*}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  INSTALL_ROOT="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$INSTALL_ROOT/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
INSTALL_ROOT="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

SCRIPTNAME=$0

if ! hash pkg-config; then
  echo "[ERROR]: neut-config relies on pkg-config, which cannot be found in the PATH variable."
  exit 1
fi

PKGCONFIG_NEUT_INSTALL_ROOT=$(pkg-config ${INSTALL_ROOT}/neut.pc --variable=prefix)
if [ "$?" != "0" ]; then
  echo "[ERROR]: Failed to read NEUT pkg-config file: ${INSTALL_ROOT}/neut.pc"
  exit 1
fi

PKGCONFIG_NEUT_INSTALL_ROOT_RESOLV=$(readlink -f ${PKGCONFIG_NEUT_INSTALL_ROOT})

if [ "${PKGCONFIG_NEUT_INSTALL_ROOT_RESOLV}" != "${INSTALL_ROOT}" ]; then
   echo "[ERROR]: pkg-config thinks NEUT is installed to: ${PKGCONFIG_NEUT_INSTALL_ROOT_RESOLV}, but this script is being run from: ${INSTALL_ROOT}"
   exit 1
fi

if [ ${#} -eq 0 ]; then
  echo "${SCRIPTNAME} [--features] [--has-feature <feature name>] [--incdir] [--cflags] [--libdir] [--libs] [--iolibs] [--version]"
fi

FEATURES=$(pkg-config ${INSTALL_ROOT}/neut.pc --variable=FEATURES)

while [[ ${#} -gt 0 ]]; do

  key="$1"
  case $key in

      --incdir)
        pkg-config ${INSTALL_ROOT}/neut.pc --variable=includedir
      ;;

      --libdir)
        pkg-config ${INSTALL_ROOT}/neut.pc --variable=libdir
      ;;

      --cflags)
        pkg-config ${INSTALL_ROOT}/neut.pc --cflags
      ;;

      --libs)
        pkg-config ${INSTALL_ROOT}/neut.pc --libs
      ;;

      --libs-static)
        pkg-config ${INSTALL_ROOT}/neut.pc --libs --static
      ;;

      --iolibs)
        pkg-config ${INSTALL_ROOT}/neut.pc --variable=IO_LIB_FLAGS
      ;;

      --exeflags)
        pkg-config ${INSTALL_ROOT}/neut.pc --variable=EXE_LINKFLAGS
      ;;

      --features)
      echo ${FEATURES}
      ;;

      --has-feature)
      shift
      TEST_FEATURE=$1
        if [[ "${FEATURES}" =~ (^|[[:space:]])${TEST_FEATURE}($|[[:space:]]) ]]; then
          exit 0
        else 
          exit 1
        fi
      ;;

      --version)
        pkg-config ${INSTALL_ROOT}/neut.pc --modversion
      ;;

      -?|--help)

      echo "[RUNLIKE] ${SCRIPTNAME}"
      echo -e "\t--incdir                   : Print location of installed header files."
      echo -e "\t--cflags                   : Print recommended compiler flags for compiling against NEUT."
      echo -e "\t--libdir                   : Print location of installed libraries."
      echo -e "\t--libs                     : Print linker flags for linking against NEUT"
      echo -e "\t--libs-static              : Print linker flags for linking against NEUT and NEUT's dependencies"
      echo -e "\t--iolibs                   : Print linker flags required to read NEUT files"
      echo -e "\t--exeflags                 : Print recommended flags for linking executables against NEUT."
      echo -e "\t--features                 : Print list of features."
      echo -e "\t--has-feature <feature>    : Returns 0 if has feature, 1 if not."
      echo -e "\t--version                  : Print NEUT version."
      echo -e "\t-?|--help                  : Print this message."
      exit 0
      ;;

      *)
              # unknown option
      echo "Unknown option $1"
      exit 1
      ;;
  esac
  shift # past argument or value
done
